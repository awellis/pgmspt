%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1637.000000 1239.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.1 (Build 16B2555) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1637 1239
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1637 1239
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /B put
dup 35 /quotedblleft put
dup 36 /T put
dup 37 /u put
dup 38 /r put
dup 39 /n put
dup 40 /space put
dup 41 /t put
dup 42 /o put
dup 43 /y put
dup 44 /period put
dup 45 /h put
dup 46 /e put
dup 47 /quoteright put
dup 48 /s put
dup 49 /m put
dup 50 /b put
dup 51 /d put
dup 52 /i put
dup 53 /quotedblright put
dup 54 /S put
dup 55 /p put
dup 56 /a put
dup 57 /l put
dup 58 /c put
dup 59 /v put
dup 60 /k put
dup 61 /g put
dup 62 /I put
dup 63 /f put
dup 64 /hyphen put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<







321828351E6F00000002004201C8016802CA000E001D0067BA000E000000032BB8000E10BA001D000F00032BB8001D10B8000010B80007D0B800072FB8000F10B80016D0B800162F00BA0007000800032BB8000710BA0000000100032BB8000010B8000FD0B8000110B80010D0B8000710B80016D0B8000810B80017D03031131533140E022315323E023D01331533140E022315323E023D01423B050E16111D291B0D483B050E16111D291B0D02CA6F11231C11321828351E6F6F11231C11321828351E6F0000000001005301C800C202CA000E0023BA000E000000032BB8000E10B8000010B80007D0B800072F00B800082FB800002F3031131533140E022315323E023D01533B050E16111D291B0D02CA6F11231C11321828351E6F00000000020037FF5B04A802FA000B00110023B800142BBB00060003000300182B00B800042FB800112FBB00090002000000182B3031372226351133111416332115050901370901F75E62622E30034EFEA20136FECA42017FFE8276606101C3FE3D30345DD7010401004BFEB5FEB80001000000010000451BB6635F0F3CF5011103E800000000B643600000000000D34D8599FC49FE1F07C304350000000900020000000000000001000003B8FF2B001C08B1FC49FE8007C300010000000000000000000000000000002201F400330116000001850032011600530288FFFA02AD004E0103005202880025023E000202190024025100430219002402510024021900240128000C023E0024022C004000DE00450207004500DE004503550040022C0040023E002402510043014D003D01F4001F013B0009022C004001F4000E01F4000801AA004201AA00420116005304BE0037000000480048005A007400A4016801820216023C034603DE045004EE055605A2065406A606D00702071C07B607FE089E093609640A080A5A0AAA0ACA0B340B960BF60C220C5800000001000000220096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/period 3 def
/A 4 def
/B 5 def
/I 6 def
/S 7 def
/T 8 def
/a 9 def
/b 10 def
/c 11 def
/d 12 def
/e 13 def
/f 14 def
/g 15 def
/h 16 def
/i 17 def
/k 18 def
/l 19 def
/m 20 def
/n 21 def
/o 22 def
/p 23 def
/r 24 def
/s 25 def
/t 26 def
/u 27 def
/v 28 def
/y 29 def
/quotedblleft 30 def
/quotedblright 31 def
/quoteright 32 def
/uni2B91 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9315F0017FC3864FF8D40C74661F4AC4F359AB40455CCBD4B88F0CECF0FBBCE3D81E443BF2B3BDABA64DE646528D274216E141CC2BD3049E9F7D1A996BC56CAFBBBB18F69063033C6B97D9FB89E146ACD1A18BD717F52681A976D83447D96DD3627801822CD048F3284DD5D0EC48F06CB75FD52DE9C09F67D9D0AA73EC5B1370EC0B3A342F469440B82FE664C3A9A0ED2D55C9AA222C7DBA8A8116D1438E19AB2CB862F62C81F4B66956FA8A12638937B2C99451D110BE3B8F9F66CAA26E7ED17B9EFFB75B310BD526B117CB5783CC5037164FF59CE88608BEAFFEF3AC745088E206DA9FB9846218EA5857BAE89CB18F1E48AF466CDB1FAC1FD10C279DC72701884569B4B58AD3BEA1DD50A256BBCED25FCBACC84DDB515149329FC41210A3D26823560AEBD34D8EA3B9F80DCFD15EB48CB14FBC816BBBB6DCFC8E8F5C29433BA0666F2E7FC1F1B146B707088BEEC3D4750696FD862CF2C86E459CA3782E6412E3977B103A54001F0964A97C0837AD70D12EA25C4C8CFB82AA9867ADD4643F9304B2900EC94B0B6EB23B840919DA33D1CEF607CCF4B715459A0279D27215FC3D303A431CCF7B925AD331D608E7B7C06F95384E025C441B5F938BF4FB345379E01337A395AEE400DE6AEDAB735ED82B94DDFEFE373E944B1ED7C839DE40BAD0461B5BB2F30BF201DE0D7600FFCAF70ED47F8041EC0011CB5526889850CF9A753921562120188E4C6B070C0E9E286526AB8B7FE4396722267588E22F2D69D85642F4

DA64264E7D77002C3DDDCF25F91CD56CC0FC58690DC7E8BC93F76D3080C2C9F82F610FFE9E1214AF773B23CFA7E7A13C3346BED9776F54F0E6D27E827173505ACAB8ACA14BDCA01A84BAE68446F64029ACD10468D6CBA6DB3A0A313718057B570E0813D2A6D1B3A0F3E4F5DFDA90B73EB9E89CDD04E7DF6C7C9382BE59074308CB6F25F4C37CA6F765B18E86FA5D76FC906A11EA26A9216B849B7F7AB0300C38D13BEC7C710D8947F3785A6743F289BFB5736F22001DC7C22F008B74662D535EA007FF8FCB64E7BB12D8A69F1B84B3E1EA7D2E861DCE66A9A7C063759867706E9F2965CC937725D5251F85C96E961D3C83FEE89BD0ABC1B4F6010A8C10CED56E62B4B81DFFB3F75695B0E49AA751B91C69D94FD0F69B235DEA8B993759225F89769F3170BD80B874A65F2195526D2ACD4298F0DA62042074F44A38B3ACCF6CCED15ADCC65E6F177456227607F03790BEA0974B424DBAE8A0587C02838D0573981F1CE063C362DE11E067FA06E4AEDCC89D0A78D608425636059778411B925719699A5CE98F9CF648B1A5137E93A9AE8F766C86BA70D1A5D6C64EB86FC2724D12B655033D94B6A41717CF08FA7518715A657E3026FC8B6E6DFF1209EA7F5E915879AACA0238AAA05AC2576ABC7008E6FC31A7783329DA5BBF28811EFC3D0FBB15B8C92B89C252597C5A3DCEB2932E6F379A35963295BDE8E8525E56242AD66AFE7FAA2E5412C809E2D6DB5D436164566DB15E793AAD7E4F289401BD33F98370D2897E3903415800459B63A8775579BA961AB6C37442F5D8C6A9F0D06F4C99C97D2A429507B0A3BE89A928E6A7C7408AC8650FACDE88CF2F046C2FF12494BF6C8A31CFF121EFBBBBF81B719EA22DC1C4E447686FA0E1FD11B978820C27CC46F09158A3A9A4904AA86F8CECA73FB4F7DF6642458DC12A0501943CC785B24975762AE713F3E5B06AD547DD70B87DFE394072111FBF1EB92F0A89B607BC76CBD6670005940490E4263108C4E6413748C459A83EA0B1BFD59D2CDF056774848F88B1693CEC4365A1346CA89439AC348E1825D490054572BDFB4B91652CE886FC3B8A99BAA3F8DB8E1343BB3862A377616F85758FFF6F7686BF21332BBA2F25B8EAB714E98927EB744168BE116A1C24B19C0D056BC52DD036443664010E3DEC9CAB7DFD57C734259047E683A41F4B308078A8B7BA90014E6EDB1677C79CADEAD6AAAC341E38B61227073D3FF033403F3B004407DC4D5EDE74AF556D6A8D429334ABC74A304C6F5612C74257B750EA7739C8DED4DEDE007E3491807B2535D94586964D01A1DB86CC0D60B71F44DB5BB4B3487F5EB4F37E846FA12B9B51D573A66C680BBD75393FBFC56AFEBBC06B0BD2714E798338DB1AD8CC31E56B44E90016C20A843C281519341F8F6C0267DDA417612A0F9C254AA78623018C7C9911113A90B9D3B5

941537B64C98760BFE1F9C3788D949521E1F1587099B6671DE29F53550778FE59D9024CD9D57DD6C9F125C3C07B3A32C59CB4C50DF872D9E251C3AF134E7ED2631AACC845194A491104D2F620FDA55DE8668146CE610470EF975534E0AF0CC9DCBA7C9AD4C923AA9E1644E584D1416CD1929E21DBE1A386FEFAEC6855666F806480652FBC5008DCD8475C172C0FCC88B4DE4DDD9A0A0136AC72EBC20C2650A06010F4A5E1BA45A366986F70E847705262BAA1F1CD1012EBAF21A3966AF1054A50EF46AC143603D05D961D12CC7186E01BBC43689D9B50B6B9462E3D58E4F67B5A9738DBF96F339C5E95CEA3CD89FB3E1065E2FBE04F57474A812570998CFAA3644E3E24056214A8687B7CEC91C4B2D6944A6E948BCE50E36587D281B0E950296C411058EC1C703738A59BBD4E25341983E05921F6F48533469EB6ADD6B79EAF4FF67AF0AA85B5E02466FDBEF58654053E04A71A8D3E7B17CD867F0305624E0AD971A01E18BA8CE85463362BD4C73217483F7303AAD56A8274D6A0FAAFD8F6A42EDF88CFEEE88625BDC64E9137426D792257C53718C6FE7DCC50A49775EA957424C42AB51F904CBC96397B6A56374A36936985883EC3262D72E3EFCB0CF458151B24F5E57B9C42358436B1FF370C17375DE58A676A712631E16473AA8FFB99D015AD7D846CDE41CBB48929D1081CA52355B9F9CD8D06B7AA4370D423571ADE72C8120272FEA4E7E2665F2980A09771F4922DAE8C79A3BDCC6889BF202B4D06AF6E1E4539624834465F211EFABEE41631724E202D79CD04E1BCF020E304A0345284F41BE570EA47FE83A5A25EE073F19BB7D0E96E2DBF207A1C708CE1FD6D38085233D0CC77A3CF0BE675D5432CC483848BB8680A4BE232A6DA68165BAA117F6C12A3D1FCBFC898C74D74D3D1E09D170B6E0D92819AFD66064F80288431B2BEFE5EB86EB325FB61F86FBF2AF6BB7F9E1EDE0453A18B0FFC63543852EAA38ED4E67C1B418811987E0A69FCCFA51FDEC402DBDD2D50D062355C3F63CF94CD0EB1932F4826EF23A419EAF049129B4386B9DF2ABD4E22563EA9D29F710AF207153CA731665A21446049D0D203BABA749699DBD63F1C2289D42518C870A09DC4A3DEF83B197BC05FAA8AAD58BE1035B439181FE4B90CEA452B5A9F53542B7457C36D76E8D10A328DFF6317F12FC032F0FBC5C11F1ABBFBFA2EF0585FF8E6AF4C6088A0B39226CAF2F68FA7FCE33B5C83A2FDA5FA19CD77B8C695386ACAA849414998D1E119DA8DF43285D5FE2745F90104A9EA712B64AE7F6881AE15A32D79AA52515EAB61E9FE53D89D02C85F737FF547099367DD35D297F2AEC6B1CD0AF8305A560A1C2F860FF0B8B3B4659B936EE2AAEF008837AA8376E415FAE64568B008BB9E120286235415315439A43BACEA3FCDA0C421424B4C699F5134833CF3FEB727CCDDC
515E0C01C03D420441DB4FD8191B435114F6C6231EDBA9C791133E7A92DCFFFFC11A3B07B763F852D8BFEFEBB8C696C0D682BC96B894DFD4E9B97BA9EB99E780FB43F4CEE37C6D2C50A6C9DE2F5BD22B055536C827AA038DD4F16423A11DD34D6C4E97F91BB2F9B60819298D2F115C3700A0A54B45384BB765A93CB017DA6335413FFBB6117DE67EACB81896C82D3DAC10CD5CB8A8369C288EA55915DB5524D2933C84516ED726F240047357695BD3D3471AEDC462AB85B20E80369604D0D9206829FBD3BAD213F9DB932CC9B9B24C3DF8A7CAE3DC7EE819B3CB07FC9B0A0D1745127539D07D9013C55051D4B48E9F61309D3DBAE5C4D6CFA924C20434787A8B5CB75888E9282FBE4B21C15BF72ADBAFF01975024520DC8602FF528CBA31D2EA32CF36086506B9CD7062C62E2C93B0A480CF6B7D9FED32A3B211CAE97608E4849629B1BD24EE2CCED91E98140925B44B064A20F9BFE2EC92B0E8866430BEB8A89C9A199765F99A564273E46C6A77CDDEB3E92332CAFD8BBD8448C49249D27292B22CC874506E03571DD8287D82FC6F8AA88E68A069B529323CAEAA09FFB49C7F6469D9685D6DDFAE93D5A6309ED4512D18C2DBD11E642B63FDBCAB5951EA6FDF4121A7F0310DA3864D9795718117CDC022A25BCF34F4ED0C1AD57991658A6DBC8E8C12296032BB9B9E700F2CC9700A0602CDAAF2FA8B332CFAFFC459B7FE2C8736054C1530AEC10B5D999BCE0F25F8AA943C492B3641B561253709866A0816D3D65DAB8CBEA9332483C0E536561DBDA74E64F438ABED8E0DAFB7C0FB25C9BFE510F1E8BB5CF90BC775E0934CB31D117094A9D3503288CDE7BC3256B59F0406B3FB1B7931AD67B4C8A603B2254BD85DF54838B0F9E248DA99C175C4298E5D4063B29610A339A50DEC752F36247068E50A84CCE3E480D0C9C922464B4B4832B2021F99C9F24B19D4FBC0B05E78882233BCFC469D206BF0742E30E28F85F97410432611BDB7AD3B00CCA5F04FC77EBB7755221929FB5D22F42818EE84A73634A9C8DC571964C95BF628B9A4854332A2FBE3D9B329CCFA4BEFA34569191F9E1990938C541DB2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /r put
dup 34 /i put
dup 35 /g put
dup 36 /h put
dup 37 /t put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<


000E000800032BB8000E10BA00140008000E111239303113113335343E0233321617352623220E02072335368E0E2136270D1C0A110E1B322C220A020205FDFBE9233C2D1A03028405101D291860000000010006FFFB015202A000190053BA0001000200032BB8000110B8000210B80006D0B8000110B80016D000B800012FBA0013000C00032BB8001310BA0004000500032BB8000410B80000D0B8000C10B8000FD0B8000F2FB8000510B80017D030311335231523153311141E0233323637350E0123222635113335EA8E56561A2D3B21152C120A160C24186802059B9B5FFECF27301A0902036E0202182401005F0001000EFF5C047902F90010002BB800142BBB000B0012000800182BB8000B10B80012DC00B800092FB800002FBB0005000F000E00182B303105090117072132363511331114062321170191FE7D01854EE802BC292873655FFD3FEDA4014C015159BF2D2A01C1FE3F6461C7FFFF0045FF5C04B002F90047000604BE0000C001400000000001000000010000E563F13F5F0F3CF5011903E800000000B643F84C00000000D34D85A2FC06FE1F059D04750001000900020000000000000001000003CFFF27001D05DCFC06FE77059D00010000000000000000000000000000000801F4001102630026025100360102003A018500360160000604BE000E04BE00450000003800F20140016E01AA01FA0230023C000000010000000800960009006D0004000200000000001E00000200042800030001B800142B01BA0004001000162B01BF00110027001F001A0012000C0000001C2BBF0012002C0025001A0012000C0000001C2BBF00130024001F001A0012000C0000001C2B00BF000E0030002500200017000C0000001C2BBF000F0034002B00200017000C0000001C2BBF0010002A0025001A0012000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/g 1 def
/h 2 def
/i 3 def
/r 4 def
/t 5 def
/uni2B90 6 def
/uni2B91 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4258367 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C980943B128E467A4B303542E85E0849534105E9F083E4E3373F14A62C6D53EEB44614B1B91815433155B96EE8EBCF1DBFE8CF046C7F060DC7F262E6381C4A9234ED8DCC3FE99AA447EA99B676E7F62A2C75CB9368D18F0A64E1E2CC0862A506884FA2CC93F8C881F21E70E060578444432DAE70398FCF2375E1EAE4C430DC5963A7025494FA2D80430EDF5CA066C0BB85C8F424323851AD2389D9E387B6146D1E562F187DF8A9FBFDD7ED71101071C07D81ED80E20208F7A187CCB811E7FC7CBF970D7B9AECD25AA37D2764F98A25E71E9C13378BD60640684B89D4D6C290BF44CA91FEF9F05B2A4A3D3BAA561DEF08B0B525B950063C076BD84724DAE5347F2F6858E8E04907059463FA8B17873A3278F200B40087A18BD6E38B01102928E15ED7A9452C68AB2DF595049D5E568488A415DB3FB876CC13E3286848A5FC0A4C3E0F78E9A38982279ED296417A34C657C3F1C35EF71EDF4B4E90408980192BFFDD29AF5F46A154E0357A839F152DB7E15E0D4A2EEE26A355E42AB586FED8819837C7711BE56895EFC9781F3FF4F42075D2F7B2215758A8493FB6AE17CF2B7AD3A198391E08CA0C60E63C9D18833E8DF2E2A46DE4ADA001173DAE87D3FDB171112ED9C57993CAE5341D8EE457A21F8FBF65CD552358EEB3E3B75578DF1CAC4F3EA98B1A8826B4C775766ACE8BAC990A2B2C1CDC7D5583395759E97363C58A7BAB1CC92462BCC128F0EDAD83383AF3127752D39E4A3612A670CA681F9CAB4228A262C
AC5D4F7F8A2BA2C7429F561DCF8BD74FCEFB58F49CA49A1EFEB3319D15A0184E67DB2566BC0BF7FE40713D8F157B515E251FE53A5E4825AA904B211644CEF71895AC7C96A553A95EB898E06E1CB7A0922BD435172FECBAC00FEBFD2935103AACD0D52497CA9F1415871F61B73A9D36039C2D8E7E61AEE24F362FD31064555E44B97DF9AF52E86A5BDE0964D1B060508D1736AA4297E558D97052A91A57C1373D61FA204479AEA131BFB8705E3426FA3B2F9A5C1E6EAFEF37DD88E4D85C31408527C61CA90F694A3082BBC6633FC142574EC9AA5D45B612D553EB03AE050DC15F88A11EADE2A1A8A526D2831FA8482DCA1C7EC6FBC6ADD4FA2C346B0CBF3949FEF475D86562CBC800E4782F639D85951B8F3354323CAE3F6B3DB533F2430C55A9B8DE0CE537472C08BB080B1FCD9BB7E999382D3B92890DF428835C732B94406511AFAE203E0AE76B2017C906D59423EAEE982DE22D7592AA423141E7F9BF9D620F4227D6A6433E6180409137ECD8E8758A9725551F5BE8790ED66723FC236B8CF4301A9DEC6BB20C1C0C73FC0753A44EA1F7A69F4B8D004D0390682A26DCDC0A1094FEF5240B5917DA9B3B60564EEE0C607B215133EEE30CE46F13B1E49C2EB2A527B95D65E67F638FB559C33949214B9781397FB215B7E582CB69FAB5D30BB341B1A3334362DAAEAB9002B1AD4B24A2305E4E708FE51BEA9325282F19C07117B8326AE0C54258ECD40811CB26324BA30B92FE00DBE59995931DACEE4A6478D52A537B0473C134FD7BB0E95B877269CA9F33106660913C571B0D3AD2E281F706235F2E8A1F00B26A0AA0FD81E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 1637 1239 rc
0 1239 m
1637 1239 l
1637 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-2141.6924 3189.6155 m
4069.8462 3189.6155 l
4069.8462 -2720 l
-2141.6924 -2720 l
h
-2141.6924 3189.6155 m
f
3 w
2 J
2 j
[
12
12
] 0 d
0.60000002 i
0.39920801 0.415795 0.42006099 sc
1 0 0 -1 301 460 cm
-243.10001 -72.15773 m
584.85999 -72.981941 l
S
0 i
CM
899.29999 532.9953 m
885.85498 538.02191 l
885.86505 527.94196 l
h
899.29999 532.9953 m
f
0 J
0 j
[] 0 d
1 0 0 -1 301 460 cm
598.29999 -72.995323 m
584.85498 -78.021942 l
584.86505 -67.941948 l
h
598.29999 -72.995323 m
S
-243.09442 -66.557732 m
-243.10558 -77.757729 l
S
2 J
2 j
[
12
12
] 0 d
0.60000002 i
304.58371 253.26675 m
-120.76419 -316.54037 l
S
0 i
CM
172.19612 787.31055 m
176.19699 773.52551 l
184.27463 779.55524 l
h
172.19612 787.31055 m
f
0 J
0 j
[] 0 d
1 0 0 -1 301 460 cm
-128.80388 -327.31058 m
-124.80301 -313.52548 l
-116.72537 -319.55527 l
h
-128.80388 -327.31058 m
S
309.07129 249.91689 m
300.09613 256.61664 l
S
0.60000002 0.60000002 0.60000002 sc
CM
396.08054 989.03418 m
377.45953 1007.6553 347.26892 1007.6553 328.64792 989.03418 c
310.02682 970.41315 310.02682 940.22253 328.64792 921.60156 c
347.26892 902.98047 377.45953 902.98047 396.08054 921.60156 c
414.70166 940.22253 414.70166 970.41315 396.08054 989.03418 c
410.04883 840.8808 m
409.99664 842.98029 410.7717 845.09656 412.37399 846.69885 c
415.47748 849.80237 420.50925 849.80237 423.61276 846.69885 c
425.21506 845.09656 425.99011 842.98029 425.93793 840.8808 c
426.0058 840.8808 l
426.0058 749.49005 l
426.0058 731.60925 424.02722 713.72845 441.83444 713.72845 c
459.64163 713.72845 457.66306 731.60925 457.66306 749.49005 c
457.66306 856.77484 l
457.72849 856.77484 l
457.72849 883.10895 432.11087 904.45691 400.50992 904.45691 c
362.36423 904.45691 l
324.21854 904.45691 l
292.61761 904.45691 267 883.10895 267 856.77484 c
267.0654 856.77484 l
267.0654 749.49005 l
267.0654 731.60925 265.08682 713.72845 282.89404 713.72845 c
300.70126 713.72845 298.72266 731.60925 298.72266 749.49005 c
298.72266 840.8808 l
298.79056 840.8808 l
298.83942 842.84784 299.61447 844.80029 301.11572 846.30151 c
304.21921 849.40503 309.25098 849.40503 312.35449 846.30151 c
313.85571 844.80029 314.63077 842.84784 314.67966 840.8808 c
314.68213 840.8808 l
314.68213 840.69006 l
314.68213 840.68475 314.68213 840.67944 314.68213 840.67413 c
314.68213 697.83441 l
314.76715 697.83441 l
314.76715 570.68213 l
314.76715 546.84106 312.19501 523 335.34436 523 c
358.49374 523 355.9216 546.84106 355.9216 570.68213 c
355.9216 697.83441 l
356.0097 697.83441 l
355.95712 699.52704 356.57678 701.23669 357.86871 702.52863 c
360.35153 705.01141 364.37695 705.01141 366.85974 702.52863 c
368.15167 701.23669 368.77136 699.52704 368.71878 697.83441 c
368.80688 697.83441 l
368.80688 570.68213 l
368.80688 546.84106 366.23474 523 389.38409 523 c
412.53348 523 409.96133 546.84106 409.96133 570.68213 c
409.96133 697.83441 l
410.04636 697.83441 l
410.04636 840.8808 l
h
410.04883 840.8808 m
f
0 0 0 sc
376.78247 970.53552 m
378.73511 968.58289 378.73511 965.41711 376.78247 963.46448 c
374.82983 961.51184 371.66403 961.51184 369.7114 963.46448 c
367.75876 965.41711 367.75876 968.58289 369.7114 970.53552 c
371.66403 972.48816 374.82983 972.48816 376.78247 970.53552 c
f
355.01706 970.53552 m
356.9697 968.58289 356.9697 965.41711 355.01706 963.46448 c
353.06445 961.51184 349.89862 961.51184 347.94601 963.46448 c
345.99338 965.41711 345.99338 968.58289 347.94601 970.53552 c
349.89862 972.48816 353.06445 972.48816 355.01706 970.53552 c
f
0.85490197 0.85490197 0.85490197 sc
373.59497 943.03552 m
379.79758 941.08289 379.79758 937.91711 373.59497 935.96448 c
367.39243 934.01184 357.33606 934.01184 351.13348 935.96448 c
344.93088 937.91711 344.93088 941.08289 351.13348 943.03552 c
357.33606 944.98816 367.39243 944.98816 373.59497 943.03552 c
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
72.594986 -483.03552 m
78.797592 -481.08292 78.797592 -477.91708 72.594986 -475.96448 c
66.39241 -474.01184 56.33606 -474.01184 50.133484 -475.96448 c
43.930878 -477.91708 43.930878 -481.08292 50.133484 -483.03552 c
56.33606 -484.98816 66.39241 -484.98816 72.594986 -483.03552 c
S
3 w
2 J
2 j
[
12
12
] 0 d
0.39920801 0.415795 0.42006099 sc
60.994072 -639.93384 m
61.72847 -550 l
S
0 i
CM
361.90262 1111.1334 m
357.79422 1099.8995 l
366.19394 1099.9681 l
h
361.90262 1111.1334 m
f
0 J
0 j
[] 0 d
1 0 0 -1 301 460 cm
60.902615 -651.13348 m
56.794209 -639.89954 l
65.193932 -639.96814 l
h
60.902615 -651.13348 m
S
2 J
2 j
[
12
12
] 0 d
0.60000002 i
60.864235 -70 m
59.167366 -18.426683 l
61.72847 35.833332 l
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
661.08057 635.03418 m
642.45953 653.65527 612.26892 653.65527 593.64795 635.03418 c
575.02679 616.41315 575.02679 586.22253 593.64795 567.60156 c
612.26892 548.98047 642.45953 548.98047 661.08057 567.60156 c
679.70166 586.22253 679.70166 616.41315 661.08057 635.03418 c
675.04883 486.88077 m
674.99664 488.98029 675.77167 491.09656 677.37396 492.69882 c
680.47748 495.80237 685.50928 495.80237 688.61273 492.69882 c
690.21503 491.09656 690.99011 488.98029 690.93793 486.88077 c
691.0058 486.88077 l
691.0058 395.49005 l
691.0058 377.60925 689.02722 359.72845 706.83441 359.72845 c
724.64166 359.72845 722.66309 377.60925 722.66309 395.49005 c
722.66309 502.77481 l
722.72845 502.77481 l
722.72845 529.10895 697.11084 550.45691 665.50995 550.45691 c
627.36426 550.45691 l
589.21857 550.45691 l
557.61761 550.45691 532 529.10895 532 502.77481 c
532.06543 502.77481 l
532.06543 395.49005 l
532.06543 377.60925 530.08685 359.72845 547.89404 359.72845 c
565.70123 359.72845 563.72266 377.60925 563.72266 395.49005 c
563.72266 486.88077 l
563.79053 486.88077 l
563.83942 488.84787 564.6145 490.80026 566.11572 492.30148 c
569.21924 495.405 574.25098 495.405 577.35449 492.30148 c
578.85571 490.80026 579.63074 488.84787 579.67963 486.88077 c
579.68213 486.88077 l
579.68213 486.69006 l
579.68213 486.68475 579.68213 486.67944 579.68213 486.67413 c
579.68213 343.83441 l
579.76715 343.83441 l
579.76715 216.68211 l
579.76715 192.84105 577.19501 169 600.34436 169 c
623.49371 169 620.92157 192.84105 620.92157 216.68211 c
620.92157 343.83441 l
621.0097 343.83441 l
620.95709 345.52704 621.57678 347.23666 622.86871 348.52859 c
625.3515 351.01141 629.37695 351.01141 631.85974 348.52859 c
633.15167 347.23666 633.77136 345.52704 633.71875 343.83441 c
633.80688 343.83441 l
633.80688 216.68211 l
633.80688 192.84105 631.23474 169 654.38409 169 c
677.53345 169 674.9613 192.84105 674.9613 216.68211 c
674.9613 343.83441 l
675.04633 343.83441 l
675.04633 486.88077 l
h
675.04883 486.88077 m
f
0.60000002 i
0.39920801 0.415795 0.42006099 sc
1 0 0 -1 301 460 cm
327.5477 -362.11469 m
325.98138 -236.57062 l
327.12439 -219.79718 l
326.72849 -195 l
S
0 i
CM
628.06628 833.30432 m
624.35156 821.93414 l
632.74384 822.29523 l
h
628.06628 833.30432 m
f
0 J
0 j
[] 0 d
1 0 0 -1 301 460 cm
327.06625 -373.30435 m
323.35159 -361.93414 l
331.74384 -362.29523 l
h
327.06625 -373.30435 m
S
2 J
2 j
[
12
12
] 0 d
0.60000002 i
325.86423 297 m
326.72849 402.83334 l
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
1258.0806 635.03418 m
1239.4596 653.65527 1209.2689 653.65527 1190.6479 635.03418 c
1172.0269 616.41315 1172.0269 586.2226 1190.6479 567.60156 c
1209.2689 548.98047 1239.4596 548.98047 1258.0806 567.60156 c
1276.7017 586.2226 1276.7017 616.41315 1258.0806 635.03418 c
1272.0488 486.8808 m
1271.9966 488.98032 1272.7717 491.09656 1274.374 492.69885 c
1277.4775 495.80237 1282.5093 495.80237 1285.6128 492.69885 c
1287.2151 491.09656 1287.9901 488.98032 1287.938 486.8808 c
1288.0059 486.8808 l
1288.0059 395.49005 l
1288.0059 377.60925 1286.0272 359.72849 1303.8345 359.72849 c
1321.6416 359.72849 1319.6631 377.60925 1319.6631 395.49005 c
1319.6631 502.77481 l
1319.7285 502.77481 l
1319.7285 529.10895 1294.1108 550.45697 1262.5099 550.45697 c
1224.3643 550.45697 l
1186.2185 550.45697 l
1154.6176 550.45697 1129 529.10895 1129 502.77481 c
1129.0654 502.77481 l
1129.0654 395.49005 l
1129.0654 377.60925 1127.0868 359.72849 1144.894 359.72849 c
1162.7013 359.72849 1160.7227 377.60925 1160.7227 395.49005 c
1160.7227 486.8808 l
1160.7905 486.8808 l
1160.8395 488.84787 1161.6145 490.80026 1163.1157 492.30148 c
1166.2192 495.405 1171.251 495.405 1174.3545 492.30148 c
1175.8557 490.80026 1176.6307 488.84787 1176.6797 486.8808 c
1176.6821 486.8808 l
1176.6821 486.69009 l
1176.6821 486.68475 1176.6821 486.67944 1176.6821 486.67413 c
1176.6821 343.83444 l
1176.7671 343.83444 l
1176.7671 216.68211 l
1176.7671 192.84106 1174.1949 169 1197.3444 169 c
1220.4938 169 1217.9216 192.84106 1217.9216 216.68211 c
1217.9216 343.83444 l
1218.0096 343.83444 l
1217.9572 345.52704 1218.5768 347.23669 1219.8688 348.52863 c
1222.3516 351.01144 1226.377 351.01144 1228.8597 348.52863 c
1230.1517 347.23669 1230.7714 345.52707 1230.7188 343.83444 c
1230.8069 343.83444 l
1230.8069 216.68211 l
1230.8069 192.84106 1228.2347 169 1251.3842 169 c
1274.5334 169 1271.9613 192.84106 1271.9613 216.68211 c
1271.9613 343.83444 l
1272.0464 343.83444 l
1272.0464 486.8808 l
h
1272.0488 486.8808 m
f
/Cs1 SC
0 sc
1 0 0 -1 147.5 1186.5 cm
/F1.1[ 64 0 0 -64 0 0]sf
-20.736 22.604004 m
(!)s
1 0 0 -1 1195.5 1186.5 cm
-21.92 22.604004 m
(")s
2 w
1 J
1 j
[] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 301 460 cm
817 -253.8125 m
817 -303.67593 733.80963 -344 631 -344 c
528.19037 -344 445 -303.67593 445 -253.8125 c
445 -211.31947 506.03033 -175.54861 587.95215 -166.22684 c
581.2301 -150.18291 570.15198 -131.32178 552.71259 -122 c
586.31537 -122 619.55725 -144.11342 642.26044 -163.84256 c
739.80255 -166.65974 817 -205.90047 817 -253.8125 c
h
817 -253.8125 m
S
Q
/Cs3 SC
0 sc
q
1118 713.8125 m
1118 763.6759 1034.8097 804 932 804 c
829.19037 804 746 763.6759 746 713.8125 c
746 671.31946 807.03033 635.54865 888.95215 626.22687 c
882.2301 610.18292 871.15198 591.32178 853.71259 582 c
887.31537 582 920.55725 604.1134 943.26044 623.84259 c
1040.8026 626.65973 1118 665.90045 1118 713.8125 c
h
1118 713.8125 m
W
0 0 1637 1239 rc
1 0 0 -1 932 693 cm
/F1.1[ 26 0 0 -26 0 0]sf
-110.994 -52.700001 m
(#$%&'\(\)*\(+*%&\()[ 11.076000 12.532000 14.456000 9.126000 14.456000 7.228000 8.190000 14.924000 7.228000 13.000000 14.924000 14.456000 8.658000 0.000000 ] xS
/F2.1[ 26 0 0 -26 0 0]sf
46.487999 -52.700001 m
(!"#$%)[ 10.114000 6.708000 15.886000 15.418000 0.000000 ] xS
/F1.1[ 26 0 0 -26 0 0]sf
103.766 -52.700001 m
(,\()[ 7.228000 0.000000 ] xS
-106.925 -20.94582 m
($-.&./0\(0*1.2*3+\()[ 14.924000 14.456000 13.962000 8.190000 13.962000 5.304000 13.000000 7.228000 13.000000 14.924000 22.178000 13.962000 15.418000 14.924000 15.418000 13.000000 0.000000 ] xS
-73.696999 10.782178 m
(2.-4'3\(+*%,5)[ 15.418000 13.962000 14.456000 5.772000 14.456000 15.418000 7.228000 13.000000 14.924000 14.456000 7.228000 0.000000 ] xS
Q
/Cs1 SC
0 sc
q
0 0 1637 1239 rc
1 0 0 -1 357 36 cm
/F1.1[ 36 0 0 -36 0 0]sf
-208.026 12.496002 m
(678\)489\(7.&07.:\)4;.\(\)8<4'=)[ 23.328000 21.348000 19.332000 11.340000 7.992000 19.332000 7.992000 10.008000 21.348000 19.332000 11.988000 18.000000 21.348000 19.332000 19.332000 11.340000 7.992000 18.000000 19.332000 10.008000 11.340000 19.332000 18.684000 7.992000 20.016000 0.000000 ] xS
1 0 0 -1 1320 36 cm
-170.04601 12.496002 m
(>18=4'.3\(0.9?@1*\)4*')[ 9.324000 30.708000 19.332000 20.664000 7.992000 20.016000 19.332000 21.348000 10.008000 18.000000 19.332000 7.992000 10.656000 14.004000 30.708000 20.664000 11.340000 7.992000 20.664000 0.000000 ] xS
/Cs2 SC
0.39920801 0.415795 0.42006099 sc
CM
50.95118 988.46112 m
44.899349 994.513 35.087406 994.513 29.035576 988.46112 c
22.983715 982.4093 22.983715 972.59735 29.035576 966.54553 c
35.087406 960.49365 44.899349 960.49365 50.95118 966.54553 c
57.00304 972.59735 57.00304 982.4093 50.95118 988.46112 c
55.490868 940.31128 m
55.473907 940.99359 55.725803 941.6814 56.246548 942.20215 c
57.255184 943.21075 58.890511 943.21075 59.899147 942.20215 c
60.419891 941.6814 60.671787 940.99359 60.654827 940.31128 c
60.676888 940.31128 l
60.676888 910.60925 l
60.676888 904.79803 60.033848 898.98676 65.82119 898.98676 c
71.608536 898.98676 70.9655 904.79803 70.9655 910.60925 c
70.9655 945.47681 l
70.986755 945.47681 l
70.986755 954.0354 62.66103 960.97351 52.390728 960.97351 c
39.993378 960.97351 l
27.596027 960.97351 l
17.325726 960.97351 9 954.0354 9 945.47681 c
9.0212574 945.47681 l
9.0212574 910.60925 l
9.0212574 904.79803 8.3782196 898.98676 14.165563 898.98676 c
19.952906 898.98676 19.309868 904.79803 19.309868 910.60925 c
19.309868 940.31128 l
19.331926 940.31128 l
19.347815 940.95056 19.599709 941.58508 20.087606 942.073 c
21.096245 943.0816 22.731569 943.0816 23.740208 942.073 c
24.228106 941.58508 24.48 940.95056 24.495888 940.31128 c
24.496689 940.31128 l
24.496689 940.24927 l
24.496691 940.24756 24.496691 940.24585 24.496689 940.24408 c
24.496689 893.82117 l
24.524323 893.82117 l
24.524323 852.4967 l
24.524323 844.74835 23.688374 837 31.21192 837 c
38.735466 837 37.899517 844.74835 37.899517 852.4967 c
37.899517 893.82117 l
37.928154 893.82117 l
37.91106 894.37128 38.112457 894.92694 38.532337 895.3468 c
39.339249 896.15369 40.647507 896.15369 41.454418 895.3468 c
41.874298 894.92694 42.075695 894.37128 42.058601 893.82117 c
42.087238 893.82117 l
42.087238 852.4967 l
42.087238 844.74835 41.251289 837 48.774834 837 c
56.298382 837 55.462433 844.74835 55.462433 852.4967 c
55.462433 893.82117 l
55.490067 893.82117 l
55.490067 940.31128 l
h
55.490868 940.31128 m
f
1 1 1 sc
728.36725 976.23474 m
668.40625 996 692.3172 1162.3912 787.96844 1134 c
796.84271 1189.3435 908.07227 1180.3606 907.34509 1134 c
977.08936 1193.2959 1066.2184 1075.0612 1006.4355 1015.7653 c
1078.172 987.01709 1005.5302 832.12592 946.65625 858 c
941.94458 814.87408 836.69556 799.78241 827.45764 858 c
767.86023 795.82642 643.59009 891.42175 728.36725 976.23474 c
h
728.36725 976.23474 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
427.36728 -516.23474 m
367.40625 -536 391.3172 -702.39117 486.96841 -674 c
495.84274 -729.34351 607.07227 -720.36066 606.34509 -674 c
676.08936 -733.29584 765.21844 -615.0611 705.43549 -555.76526 c
777.17206 -527.01709 704.53021 -372.12592 645.65625 -398 c
640.94458 -354.87408 535.69556 -339.78241 526.45764 -398 c
466.86023 -335.82639 342.59006 -431.42175 427.36728 -516.23474 c
h
427.36728 -516.23474 m
S
0 i
1 1 1 sc
CM
723.36395 767.36395 m
726.87866 763.84924 726.87866 758.15076 723.36395 754.63605 c
719.84924 751.12134 714.15076 751.12134 710.63605 754.63605 c
707.12134 758.15076 707.12134 763.84924 710.63605 767.36395 c
714.15076 770.87866 719.84924 770.87866 723.36395 767.36395 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
422.36395 -307.36395 m
425.87869 -303.84924 425.87869 -298.15076 422.36395 -294.63605 c
418.84924 -291.12131 413.15076 -291.12131 409.63605 -294.63605 c
406.12131 -298.15076 406.12131 -303.84924 409.63605 -307.36395 c
413.15076 -310.87869 418.84924 -310.87869 422.36395 -307.36395 c
S
0 i
1 1 1 sc
CM
753.36395 790.36395 m
756.87866 786.84924 756.87866 781.15076 753.36395 777.63605 c
749.84924 774.12134 744.15076 774.12134 740.63605 777.63605 c
737.12134 781.15076 737.12134 786.84924 740.63605 790.36395 c
744.15076 793.87866 749.84924 793.87866 753.36395 790.36395 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
452.36395 -330.36395 m
455.87869 -326.84924 455.87869 -321.15076 452.36395 -317.63605 c
448.84924 -314.12131 443.15076 -314.12131 439.63605 -317.63605 c
436.12131 -321.15076 436.12131 -326.84924 439.63605 -330.36395 c
443.15076 -333.87869 448.84924 -333.87869 452.36395 -330.36395 c
S
0 i
1 1 1 sc
CM
778.36395 818.36395 m
781.87866 814.84924 781.87866 809.15076 778.36395 805.63605 c
774.84924 802.12134 769.15076 802.12134 765.63605 805.63605 c
762.12134 809.15076 762.12134 814.84924 765.63605 818.36395 c
769.15076 821.87866 774.84924 821.87866 778.36395 818.36395 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
477.36395 -358.36395 m
480.87869 -354.84924 480.87869 -349.15076 477.36395 -345.63605 c
473.84924 -342.12131 468.15076 -342.12131 464.63605 -345.63605 c
461.12131 -349.15076 461.12131 -354.84924 464.63605 -358.36395 c
468.15076 -361.87869 473.84924 -361.87869 477.36395 -358.36395 c
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
869.86029 1061.8767 m
863.67731 1068.0598 853.65271 1068.0598 847.46973 1061.8767 c
841.28674 1055.6937 841.28674 1045.6692 847.46973 1039.4862 c
853.65271 1033.3032 863.67731 1033.3032 869.86029 1039.4862 c
876.04327 1045.6692 876.04327 1055.6937 869.86029 1061.8767 c
874.49835 1012.6835 m
874.48102 1013.3806 874.73834 1014.0833 875.27039 1014.6154 c
876.3009 1015.6458 877.97162 1015.6458 879.00214 1014.6154 c
879.53418 1014.0833 879.7915 1013.3806 879.77417 1012.6835 c
879.79675 1012.6835 l
879.79675 982.33783 l
879.79675 976.40063 879.13977 970.4635 885.05249 970.4635 c
890.96527 970.4635 890.30829 976.40063 890.30829 982.33783 c
890.30829 1017.961 l
890.33002 1017.961 l
890.33002 1026.7051 881.82385 1033.7935 871.33099 1033.7935 c
858.66504 1033.7935 l
845.99902 1033.7935 l
835.50616 1033.7935 827 1026.7051 827 1017.961 c
827.02173 1017.961 l
827.02173 982.33783 l
827.02173 976.40063 826.36475 970.4635 832.27753 970.4635 c
838.19025 970.4635 837.53326 976.40063 837.53326 982.33783 c
837.53326 1012.6835 l
837.55585 1012.6835 l
837.57208 1013.3367 837.82941 1013.9849 838.32788 1014.4834 c
839.3584 1015.5139 841.02911 1015.5139 842.05963 1014.4834 c
842.55811 1013.9849 842.81543 1013.3367 842.83167 1012.6835 c
842.83252 1012.6835 l
842.83252 1012.6202 l
842.83252 1012.6184 842.83252 1012.6166 842.83252 1012.6149 c
842.83252 965.18597 l
842.86072 965.18597 l
842.86072 922.96594 l
842.86072 915.04968 842.00665 907.13342 849.69324 907.13342 c
857.37982 907.13342 856.52576 915.04968 856.52576 922.96594 c
856.52576 965.18597 l
856.55505 965.18597 l
856.5376 965.74799 856.74335 966.31567 857.1723 966.74463 c
857.9967 967.56903 859.33331 967.56903 860.15771 966.74463 c
860.58667 966.31567 860.79242 965.74799 860.77496 965.18597 c
860.80426 965.18597 l
860.80426 922.96594 l
860.80426 915.04968 859.9502 907.13342 867.63678 907.13342 c
875.32336 907.13342 874.4693 915.04968 874.4693 922.96594 c
874.4693 965.18597 l
874.4975 965.18597 l
874.4975 1012.6835 l
h
874.49835 1012.6835 m
f
3 w
2 J
2 j
[
12
12
] 0 d
0.60000002 i
0.39920801 0.415795 0.42006099 sc
1 0 0 -1 301 460 cm
557.49896 -643.64746 m
557.5379 -622.30951 l
557.78595 -608.50629 l
S
557.49896 -445.1412 m
557.78595 -410 l
S
2 w
1 J
1 j
[
4
4
] 0 d
0 0 0 sc
572.10455 -650.22827 m
580.07935 -646.53265 580.07935 -640.54089 572.10455 -636.84528 c
564.12982 -633.14966 551.2002 -633.14966 543.22546 -636.84528 c
535.25067 -640.54089 535.25067 -646.53265 543.22546 -650.22827 c
551.2002 -653.92389 564.12982 -653.92389 572.10455 -650.22827 c
S
[] 0 d
571.67798 -653 m
566.30737 -652.22742 l
568.79895 -648.1441 l
S
0 i
1 1 1 sc
CM
702.36395 735.36395 m
705.87866 731.84924 705.87866 726.15076 702.36395 722.63605 c
698.84924 719.12134 693.15076 719.12134 689.63605 722.63605 c
686.12134 726.15076 686.12134 731.84924 689.63605 735.36395 c
693.15076 738.87866 698.84924 738.87866 702.36395 735.36395 c
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
401.36395 -275.36395 m
404.87869 -271.84924 404.87869 -266.15076 401.36395 -262.63605 c
397.84924 -259.12131 392.15076 -259.12131 388.63605 -262.63605 c
385.12131 -266.15076 385.12131 -271.84924 388.63605 -275.36395 c
392.15076 -278.87869 397.84924 -278.87869 401.36395 -275.36395 c
S
0 i
1 1 1 sc
CM
685.36395 691.36395 m
688.87866 687.84924 688.87866 682.15076 685.36395 678.63605 c
681.84924 675.12134 676.15076 675.12134 672.63605 678.63605 c
669.12134 682.15076 669.12134 687.84924 672.63605 691.36395 c
676.15076 694.87866 681.84924 694.87866 685.36395 691.36395 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
384.36395 -231.36395 m
387.87869 -227.84924 387.87869 -222.15076 384.36395 -218.63605 c
380.84924 -215.12131 375.15076 -215.12131 371.63605 -218.63605 c
368.12131 -222.15076 368.12131 -227.84924 371.63605 -231.36395 c
375.15076 -234.87869 380.84924 -234.87869 384.36395 -231.36395 c
S
0 i
1 1 1 sc
CM
1304.3673 981.23474 m
1244.4062 1001 1268.3173 1167.3912 1363.9684 1139 c
1372.8428 1194.3435 1484.0723 1185.3606 1483.3451 1139 c
1553.0894 1198.2959 1642.2184 1080.0612 1582.4354 1020.7653 c
1654.172 992.01709 1581.5303 837.12592 1522.6562 863 c
1517.9446 819.87408 1412.6956 804.78241 1403.4576 863 c
1343.8602 800.82642 1219.5901 896.42175 1304.3673 981.23474 c
h
1304.3673 981.23474 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
1003.3672 -521.23474 m
943.40625 -541 967.3172 -707.39117 1062.9684 -679 c
1071.8428 -734.34351 1183.0723 -725.36066 1182.3451 -679 c
1252.0894 -738.29584 1341.2184 -620.0611 1281.4354 -560.76526 c
1353.172 -532.01709 1280.5303 -377.12592 1221.6562 -403 c
1216.9446 -359.87408 1111.6956 -344.78241 1102.4576 -403 c
1042.8602 -340.82639 918.59009 -436.42175 1003.3672 -521.23474 c
h
1003.3672 -521.23474 m
S
0 i
1 1 1 sc
CM
1299.364 772.36395 m
1302.8787 768.84924 1302.8787 763.15076 1299.364 759.63605 c
1295.8492 756.12134 1290.1508 756.12134 1286.636 759.63605 c
1283.1213 763.15076 1283.1213 768.84924 1286.636 772.36395 c
1290.1508 775.87866 1295.8492 775.87866 1299.364 772.36395 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
998.36395 -312.36395 m
1001.8787 -308.84924 1001.8787 -303.15076 998.36395 -299.63605 c
994.84924 -296.12131 989.15076 -296.12131 985.63605 -299.63605 c
982.12134 -303.15076 982.12134 -308.84924 985.63605 -312.36395 c
989.15076 -315.87869 994.84924 -315.87869 998.36395 -312.36395 c
S
0 i
1 1 1 sc
CM
1329.364 795.36395 m
1332.8787 791.84924 1332.8787 786.15076 1329.364 782.63605 c
1325.8492 779.12134 1320.1508 779.12134 1316.636 782.63605 c
1313.1213 786.15076 1313.1213 791.84924 1316.636 795.36395 c
1320.1508 798.87866 1325.8492 798.87866 1329.364 795.36395 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
1028.364 -335.36395 m
1031.8787 -331.84924 1031.8787 -326.15076 1028.364 -322.63605 c
1024.8492 -319.12131 1019.1508 -319.12131 1015.636 -322.63605 c
1012.1213 -326.15076 1012.1213 -331.84924 1015.636 -335.36395 c
1019.1508 -338.87869 1024.8492 -338.87869 1028.364 -335.36395 c
S
0 i
1 1 1 sc
CM
1354.364 823.36395 m
1357.8787 819.84924 1357.8787 814.15076 1354.364 810.63605 c
1350.8492 807.12134 1345.1508 807.12134 1341.636 810.63605 c
1338.1213 814.15076 1338.1213 819.84924 1341.636 823.36395 c
1345.1508 826.87866 1350.8492 826.87866 1354.364 823.36395 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
1053.364 -363.36395 m
1056.8787 -359.84924 1056.8787 -354.15076 1053.364 -350.63605 c
1049.8492 -347.12131 1044.1508 -347.12131 1040.636 -350.63605 c
1037.1213 -354.15076 1037.1213 -359.84924 1040.636 -363.36395 c
1044.1508 -366.87869 1049.8492 -366.87869 1053.364 -363.36395 c
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
1445.8602 1066.8767 m
1439.6772 1073.0598 1429.6527 1073.0598 1423.4697 1066.8767 c
1417.2867 1060.6937 1417.2867 1050.6692 1423.4697 1044.4862 c
1429.6527 1038.3032 1439.6772 1038.3032 1445.8602 1044.4862 c
1452.0432 1050.6692 1452.0432 1060.6937 1445.8602 1066.8767 c
1450.4983 1017.6835 m
1450.481 1018.3806 1450.7384 1019.0833 1451.2704 1019.6154 c
1452.3009 1020.6458 1453.9717 1020.6458 1455.0022 1019.6154 c
1455.5342 1019.0833 1455.7915 1018.3806 1455.7742 1017.6835 c
1455.7968 1017.6835 l
1455.7968 987.33783 l
1455.7968 981.40063 1455.1398 975.4635 1461.0525 975.4635 c
1466.9653 975.4635 1466.3083 981.40063 1466.3083 987.33783 c
1466.3083 1022.961 l
1466.3301 1022.961 l
1466.3301 1031.7051 1457.8239 1038.7935 1447.3311 1038.7935 c
1434.665 1038.7935 l
1421.999 1038.7935 l
1411.5061 1038.7935 1403 1031.7051 1403 1022.961 c
1403.0217 1022.961 l
1403.0217 987.33783 l
1403.0217 981.40063 1402.3647 975.4635 1408.2775 975.4635 c
1414.1903 975.4635 1413.5333 981.40063 1413.5333 987.33783 c
1413.5333 1017.6835 l
1413.5558 1017.6835 l
1413.572 1018.3367 1413.8293 1018.9849 1414.3279 1019.4834 c
1415.3584 1020.5139 1417.0292 1020.5139 1418.0596 1019.4834 c
1418.5581 1018.9849 1418.8154 1018.3367 1418.8317 1017.6835 c
1418.8325 1017.6835 l
1418.8325 1017.6202 l
1418.8325 1017.6184 1418.8325 1017.6166 1418.8325 1017.6149 c
1418.8325 970.18597 l
1418.8607 970.18597 l
1418.8607 927.96594 l
1418.8607 920.04968 1418.0067 912.13342 1425.6932 912.13342 c
1433.3799 912.13342 1432.5258 920.04968 1432.5258 927.96594 c
1432.5258 970.18597 l
1432.5551 970.18597 l
1432.5376 970.74799 1432.7433 971.31567 1433.1724 971.74463 c
1433.9967 972.56903 1435.3334 972.56903 1436.1577 971.74463 c
1436.5867 971.31567 1436.7925 970.74799 1436.775 970.18597 c
1436.8042 970.18597 l
1436.8042 927.96594 l
1436.8042 920.04968 1435.9502 912.13342 1443.6367 912.13342 c
1451.3234 912.13342 1450.4692 920.04968 1450.4692 927.96594 c
1450.4692 970.18597 l
1450.4976 970.18597 l
1450.4976 1017.6835 l
h
1450.4983 1017.6835 m
f
3 w
2 J
2 j
[
12
12
] 0 d
0.60000002 i
0.39920801 0.415795 0.42006099 sc
1 0 0 -1 301 460 cm
1133.499 -648.64746 m
1133.5378 -627.30951 l
1133.786 -613.50629 l
S
1133.499 -450.1412 m
1133.786 -415 l
S
2 w
1 J
1 j
[
4
4
] 0 d
0 0 0 sc
1148.1046 -655.22827 m
1156.0793 -651.53265 1156.0793 -645.54089 1148.1046 -641.84528 c
1140.1298 -638.14966 1127.2002 -638.14966 1119.2255 -641.84528 c
1111.2506 -645.54089 1111.2506 -651.53265 1119.2255 -655.22827 c
1127.2002 -658.92389 1140.1298 -658.92389 1148.1046 -655.22827 c
S
[] 0 d
1147.678 -658 m
1142.3074 -657.22742 l
1144.799 -653.1441 l
S
0 i
1 1 1 sc
CM
1278.364 740.36395 m
1281.8787 736.84924 1281.8787 731.15076 1278.364 727.63605 c
1274.8492 724.12134 1269.1508 724.12134 1265.636 727.63605 c
1262.1213 731.15076 1262.1213 736.84924 1265.636 740.36395 c
1269.1508 743.87866 1274.8492 743.87866 1278.364 740.36395 c
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
977.36395 -280.36395 m
980.87866 -276.84924 980.87866 -271.15076 977.36395 -267.63605 c
973.84924 -264.12131 968.15076 -264.12131 964.63605 -267.63605 c
961.12134 -271.15076 961.12134 -276.84924 964.63605 -280.36395 c
968.15076 -283.87869 973.84924 -283.87869 977.36395 -280.36395 c
S
0 i
1 1 1 sc
CM
1261.364 696.36395 m
1264.8787 692.84924 1264.8787 687.15076 1261.364 683.63605 c
1257.8492 680.12134 1252.1508 680.12134 1248.636 683.63605 c
1245.1213 687.15076 1245.1213 692.84924 1248.636 696.36395 c
1252.1508 699.87866 1257.8492 699.87866 1261.364 696.36395 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 301 460 cm
960.36395 -236.36395 m
963.87866 -232.84924 963.87866 -227.15076 960.36395 -223.63605 c
956.84924 -220.12131 951.15076 -220.12131 947.63605 -223.63605 c
944.12134 -227.15076 944.12134 -232.84924 947.63605 -236.36395 c
951.15076 -239.87869 956.84924 -239.87869 960.36395 -236.36395 c
S
ep
end
%%Trailer
%%EOF
