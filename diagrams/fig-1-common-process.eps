%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 987.000000 780.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.2 (Build 16C67) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 494 390
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 494 390
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /a put
dup 34 /b put
dup 35 /quotedblleft put
dup 36 /Y put
dup 37 /o put
dup 38 /u put
dup 39 /quoteright put
dup 40 /v put
dup 41 /e put
dup 42 /space put
dup 43 /d put
dup 44 /r put
dup 45 /p put
dup 46 /s put
dup 47 /m put
dup 48 /t put
dup 49 /h put
dup 50 /i put
dup 51 /n put
dup 52 /g put
dup 53 /period put
dup 54 /B put
dup 55 /y put
dup 56 /comma put
dup 57 /quotedblright put
dup 58 /S put
dup 59 /l put
dup 60 /c put
dup 61 /k put
dup 62 /I put
dup 63 /f put
dup 64 /hyphen put
dup 65 /A put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<








00>] def
/CharStrings 35 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/hyphen 3 def
/period 4 def
/A 5 def
/B 6 def
/I 7 def
/S 8 def
/Y 9 def
/a 10 def
/b 11 def
/c 12 def
/d 13 def
/e 14 def
/f 15 def
/g 16 def
/h 17 def
/i 18 def
/k 19 def
/l 20 def
/m 21 def
/n 22 def
/o 23 def
/p 24 def
/r 25 def
/s 26 def
/t 27 def
/u 28 def
/v 29 def
/y 30 def
/quotedblleft 31 def
/quotedblright 32 def
/quoteright 33 def
/uni2B91 34 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec

B884DB1632936657FBE959EE6046BD5FD672C053AB5C6D056135AC6191CCD3E3EE67482C84FB6323FE7B9CA7AA70C03C1100B0FD90C591AC05B17F06D3E2F2FF54B859D6666633FF6A7E35F1FB255B25750CE93AA812E0FC7BC3E64180B98541C54FA18ABEA836177C14F0E8C767225B234F94304E125972C0655AC568F5B3089C74A880CA4B013E64769C4D56401CB54FD771CF1D3CF2B6AE67A6CC57BE9ED54C9E0BCA613F6E8D441FFE48C0E16B6755F1058845748BCC0CD4BA21F0BD78C434C4870400A44A5910D15A8D4FBB7E4B8D8C1F56201AA0EDB1B834FE535FF8329B0D84A14F7656561865B6CAD0DF9FA7C7FD310BC083FDB40B650C731C0CC196A5A8662678076D4484CDD4F48A5BB5C2093015BE10E61C552A40F4234D8A33F5BF6B4AB6FFADB54E1D0890B429B541B8B78B589E0D32EF5C2A1EB7ACBC2B04E812ACFE68DF3E51504B08E4AB1AC748F863329496E9AF2A93F7AB12CFB62996E0C939275B85123243AAC5F8FF6087B4BD03380F57A593F0065CAC524782A818F3A75AD6267B6797036CD5748A83BC46FBBFC606AD44C76D42F02947332EBD0FA6885B41BB6A785F74EB1A15736886CDBBA32F46A603347E6B3AC6DBB27F535FDBE36893EFA5D19256D9A9F7513A4A612A264844AE324139B1173AD64CDD7305779CA75389A937D67B80D015840E546B8A2A06C327DDE11C12C591BCBE4279ED4546139C7D2521907EEB360DCF7B489C6CB38FDC45009C39019891FA6D942B1D1A520BB8FF8BC4BE31BDF18A1CE1834042819A230B9DFB9A3E7699BA4D6372CADCEAFE984B053CC5AC0196D36822ED3B2454977A8EFBE5E1A48064D4B7908AF2AD52478FF0F0FB96CC42206951F595346ECE39C12579F5FA889F7AD400524135360423DE7CEC187AF205AA73E1EDD6304112675E68BEE8BAEBCF0CC7E01EC782836C2A06D0E6F290FABAD31F385DAA3E70C7341D1C66E1D5FA7E041AF14CEE8211B7B219085544FAD2F24B3E71A8AD1CADC7867B5409685247FDE81D194CC9058B721D387FDDD166261A782BDD9E877EC3FA2B2106DD872A8869EB25B655570C714442CF6716EC428B2A22D90A218978F2D35F1FC0FD32C522D7D395B9F6694EE8BF5E86A0E406BD39932345137E31E347D6DED1B7CB026E39BEE2C2FFB00304036CBA20063DF6B3ACD726939B3AE6629F3731A02FA739BD9F8AF56B49BC31AC93690B725CA11AECEEA1575447A4E5950BC1D50508F82994A179BE53E7644AB559903835A72B02E19A29BF887BDB28505A6D19214B5648000436119A67E992DDD6CFB240BDDD3F4FAC23AF3E61E2437DBBBBACFB04397ED24E4319937ED44E27B6BE11785D90B88DEEE761EB39C7D68B41F77C70583FF32D58FFB30441D5205728D47503B8C0B4680EC3C648FF691568493D4A478F7A381996DDBDA4153BD66954
DC03E0FFEDAEAC3F4A87AE7A78D769ADEDA780A7ABF987D49E3E4696F0FB07FC510867980FA729BEC620653AA5F1C816DA6B2718F573639B10228BD76EC8D3AEACB473A7B6EDE639C154A6A74700C5FFC997069B01CB618909F23A014FB7C567BDAB29E0788C659E84A2E661295C6D36BACA676CE2EF83498C1862BAE331B104100CE3C2628922E5403D2C196FAE61CCCFE3F7D9B771350373B38CDDCC9DA91E70129223C28B409FF1506065A592A3527C7CE3D9C87666DAC1F49E2DEFCCD51569A38AC38D6913E1408AC09B24992CAC4B1C4B5CDD7B72AB6D65918E94853C4C0ACF6204C0F1064742FEA92D15C6889E9E1E740684E9B711EDF07F1A06F1B72367ED304AF11C4AC4C2594901D462B0EDE8875793C89FEB76EDB651930A12FEAB423D00FA1D6F2B140E9D62C992BABDC9573196FF85EEA96C7EF33460CD31673372DCC257ACA646AB068174DDB3E72B2F3C92DF4400D514809FE2E5933C2C6EAE870F1294787590A06621B4F22CF4AD05AB6BD9509C96D676523B687965E2627B114C7F0E4F652EEF134A190DAE686CEBE2AF8BABCF4706F380101ACA401DA121117A4790224AB72AA7955D25110DB007E12A244C1E9F4C583FE6D39956FA762368A400FDBA260E0E404DDF6C1B3026035914EADAA9A459473A608C7E454F767BD7EE8D1B1D463EFD6DFFF9CFC64B5C2434AA9A31B23025E36C3954AA869F63B2D499C5058966600393A0140254748B888361A7CDF9CAA11FEAB6CD331B3C3D0A6E636E0D68F7D2D3ED46FDBDF184A0593145213C52769DF4FD3D060BD5C3EA8CCEFA39361DAA5BA9DC4C6E898AB976EB2191DE84FBB81F7ACD202934E55721FF37BD471DD7A68AE0A1BBB70001B7A2EB918D10B69B77454CDF25249E23A08206A958CC6E93D34E9C4D2CF2AEC8A1C28A5075545A3E11513298EDDC292E3E7E7FE83BD4FFD777753B869EEC2DAAA752B59E00E49BA962C5147CE82A9AA6001ED66187A1968446E4629A5712C031CD794697800E4B3DBA5566ABB1F88D57B5D5E5070FA1A6398B5E082CF41074FD34D5131EF7365B1D55189E363F43E96318D6F833C248DA1BE009D6C32003C57D3B312A57951FE9DE72A45E78950EB5B9D8F1E4188678DB0EBF93266B8350639ED3B43EBD4E3CE880D7109D3F9CBA05C4BFA08E711F23E727F8B566140AD2BF3119E235EBC280AE153E7DE71EB632927FB85D764C03F945ABB885B773D01A6B25B7949F84DA19DCBC1B91B65BE3387E8706C5CEF056BEBD9B5437E2674A17577439F51CF121C5840EDAA886F0553956E258421B4842EAB049BAD0E97312B161DB18B09B011EBEA78BBBD8FE066B41C86A11ED6FB9C8FF412B551FC6B47C5DE516ADAAD9C21AD14992B71F7F4BFC968DA1729A2B696B908AB6063D1E8966ECA535A11877C6504A081A438A9FC64E12F80117B2A2
0EEFB43999AA2BC624F147F79FD2E19B092D210F7666567350AE1B336B2DBF328DABFCDD24037C8202F9FAC46A157D0B1DA1E253624D44FBC42A59CA91D2203B32469DD54E1E6CED14BD782D89DA6BDE77EEF3D12DA2E76CE5680E1E3534C62DCD5BE07DA72613E472DD09CF1415C291F5A1BB967B13552EE66FC839341ED7136D5F1AF4CE14BCCB38187B4760D1DBA93FC72AB48EC2A7853C2B29B68641BCBDBE7F1C56F7CA74689482F444E74F0B636084888B4285CA10F10512830AC171F700E87C7DA74BF17C04FEA7CD7F7970F314930F4F7487FF24502FE00EBD6AAB938A5DCAAC6A06A631D16E243D0DFBE15C415FC06B669A4CC28A6E4D7375DAF8F7BD798AE58E56ED7A1C11A36DC34A765B95B300151389F2CAA01C6804D21E1D2024115DDDD6A57ECAC2CD761F9120CC29090A2916098A4C9A92EA9716B690E210BE4C402DBCE85DA64BA97FC0DA5428A0F5D67781FB172E846F01EE569EF24A875A197884E55C385852459DE2FEDFDBFA3F8ABC4346C0DC2894C46CBFD68387A9D160F408ED169B6CC4B39ACD972767BCD64B8F3BACE08A07D065A8CA607CA74C2B5D7F36274A2646143150E71ED41F17310B140F9EC6618EC9D97236797F15647C22D612CC1460161FE78BD1FCD00E51D8F80395E9BD0C595B22787EBA4FF9371E7D33F005EB35F4443FC844973571A1183F92E281B064F58B8A1FCE74BFDDF77E84281343847F80CAE3327247767DC70261DAF2A7B85CF7C98A2EFCC9B19807A98055BA980114F1071DA63F9395EB9D092DD39E692725877C0587ED1E2BAC94270425C951997995C02BD7109854F4ED0FEE80C6966B50FEE5A220BD326E39F2289A968A311803CD27B4E9AC7967E3E03620024E027291B1BC3D44FF2CB4C0A56B65AE7273E16621F058DDDB071EBFE1C77676E33145ADB34369FC8FCA1CFE4302F21471AA43F5E655497B533700521D303117DF193631D1BE673923AFBDE4E277AA56F2CBC73ACB11B397D3C3F111FA605FE109546387C1BBDB51373455D68EA0DC6C0E6426A669A1CF1C3CEA93F73D77B252223DFFD5D5475CD912CB8CAE9E3D092424B69D102A54778C42BF51A182C37543C8D4DA044450D916C2250BAD2B90E21BB038BF599BF71960E752F4D5B6CDF097BCE4B94CCBB727B8AEA2F26EC7643CF5BEC80E47904E8269FBC7E969FB00C33238300B528905157EB5427ADF421BCAD293909D9B92E006D618D5C7E068B82D3C3FD7C34A3E0A514EED070382486830834529EB6A9D7D331B2929B568D5241A5A5071442D8BDE7F41FCFC45BA2F1053445070564DDF57D48836B86E8EBCD93759B8343ADE4F0A6512839A42A23AF0D14CB59B84125B962178E767330E1C087DA17C7B4FAF101958CA866B9B4982EFA0EBEE945AD38F8253CA35DB52C60F6003702B57711B2C94D8038E4FF1723F
90C9D0263108E8E044BBC82E69C2D87223A08034CF1B4922D9F8B1830EAC0E650195B856E4755BA80561689197B0F4E69373FAE0356F459546AEA0DF9D5002E597DDA12A88827C2F079F369511CE4D826C2558DDB7502EEB6E21E61B37CFBE91A7BF89A3019E4EC4C86F106E2E1739A5F3334E89CC0DA9CD539B4A74A1E76F863D05963AAE507988FA83DB4D9CA4D9779012A2D85C24E9A8A74AD56745A471D32F66E0BCD956014A7734F9BADAC7B3EE323E02733F7AE1A1FB006F1DA81F40F82D2420449B91CD0BB0F10A7C7D0885AE1E3C04D272A19D08855300BBEDA9D12ACF999183B880CC9D5A2D2CBA13FB1453FEAC8B0E2B3C4CC1BE460EF77CBF78087A0EF6D4689CA6AC8A761CF8FF0D60252759856B52B48A6FABF888C876F0F1168834FCE767FB209144D7719A9D71A4CE6FE4D8C767718ACCDA30E46D1054C3946C1E69EA329E440BB7F80F1E272B8F796F29F82476FF007ABBA42D303BED064AA494335DC8C96748E687261C19321148F2DA3B2198B71459659A72987C7722D2D42AE487692B445A9BCE1CDD57BE6ED2E435F1F3C69DA1325E6136C8C1033C07BFE85CA4813AD6C38DCF15CB5D26A7C031DB40D03792C87DAF0ACE976B5E228EF9FDB1B4399F5B7E847517C7CE04AE81B162F9A735139D13895BED7E31AA55776C6AC933E88975B00EB7A74350121670F5E98C212DAA17879E11AD787F6DC804F33C89D8DBDC34F4AED10A11063F8615BEA4E5FFB66CAE6FF9EF1DC1C1561A2FDD588E19423D27BF3B3B33AF330C757E025C465BFD598E7ADDCEE6DEAEC83465D383F9D7349B913E65A2C9AAE103A08C7706254E94B33CAF32A78F56B23D52DE46C861A3B06D6D01002FF69ADC7921F6DB1FE6B47EDF63C08F0CB888544B87D71515224C18C0D7020380F20E43E0DAFB38C2A5A0E3372B78D1EA2850133BB01225D6761A407712E143D2E6B6A304D9C13DD86030C1969CFCE740460436326872DC4156893D77935B75CC53D190F07D5B7BEF1764417DB36004CE6DC5F7C13E3F60C40AB152B9D9ABDCF363D4FA8C4C974409CE299017D630722A47708B8A614F4D78CC548C0A78559C783AA89811E26424C7542F18522FBA43288853142F88CA4D5E6CB434D308EBC4F8E8620E3754BDC067E1073501A1B46D4782334F31574592D767AF2326468C38B8914D1A82B7DE5B14FD6E8AA66A4FFBC204B0EA9A07D515C3D986ED617F608EEE153AC0B19ECB50F322050ABA3A1C8EF50CE0F20A0C2CCFF2C3E33E76D631BD40FAF2592FDF42CF7F5D5664DE2CD2AF04C41AA529E0F56177F3A16415BF2516CB5273CE46AAFF597849741BB8760F8839F0A4D8F07BDDA7E104255A2760B8293D23AF909F7FB6F0B151A3796B3B4E672F2C4C17E833989EC4ACCE933FDC59A53184459B79D92C97CDD05BA1F5FBCBA2309BD71837DF2F

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 493.5 390 rc
-50.5 409 m
504 409 l
504 -32 l
-50.5 -32 l
h
-50.5 409 m
f
3 w
2 J
2 j
[
12
12
] 0 d
0.60000002 i
/Cs2 SC
0.39920801 0.415795 0.42006099 sc
0.5 0 0 -0.5 -50.5 409 cm
133.0778 473.36554 m
629.39319 472.87146 l
S
0 i
CM
270.9166 172.57097 m
264.19409 175.08427 l
264.1991 170.04427 l
h
270.9166 172.57097 m
f
0 J
0 j
[] 0 d
0.5 0 0 -0.5 -50.5 409 cm
642.83319 472.85806 m
629.38818 467.83145 l
629.39819 477.91147 l
h
642.83319 472.85806 m
S
2 J
2 j
[
12
12
] 0 d
0.60000002 i
526.48486 744.60687 m
213.85371 331.12408 l
S
0 i
CM
52.373985 248.79825 m
54.416748 241.91814 l
58.436962 244.95778 l
h
52.373985 248.79825 m
f
0 J
0 j
[] 0 d
0.5 0 0 -0.5 -50.5 409 cm
205.74797 320.4035 m
209.8335 334.16373 l
217.87392 328.08444 l
h
205.74797 320.4035 m
S
0.60000002 0.60000002 0.60000002 sc
CM
199.7541 203.45096 m
194.119 209.08609 184.9827 209.08609 179.3476 203.45096 c
173.71246 197.81586 173.71246 188.67955 179.3476 183.04445 c
184.9827 177.40932 194.119 177.40932 199.7541 183.04445 c
205.38924 188.67955 205.38924 197.81586 199.7541 203.45096 c
203.9812 158.61667 m
203.96541 159.25203 204.19995 159.89244 204.68484 160.37733 c
205.62402 161.31651 207.14674 161.31651 208.08592 160.37733 c
208.57082 159.89244 208.80536 159.25203 208.78957 158.61667 c
208.8101 158.61667 l
208.8101 130.95993 l
208.8101 125.54883 208.21135 120.13773 213.60019 120.13773 c
218.98901 120.13773 218.39026 125.54883 218.39026 130.95993 c
218.39026 163.42653 l
218.41005 163.42653 l
218.41005 171.39578 210.65762 177.85612 201.09453 177.85612 c
189.55084 177.85612 l
178.00717 177.85612 l
168.44408 177.85612 160.69165 171.39578 160.69165 163.42653 c
160.71144 163.42653 l
160.71144 130.95993 l
160.71144 125.54883 160.11269 120.13773 165.50151 120.13773 c
170.89035 120.13773 170.29158 125.54883 170.29158 130.95993 c
170.29158 158.61667 l
170.31212 158.61667 l
170.32692 159.21194 170.56146 159.80278 171.01578 160.25708 c
171.95496 161.19627 173.47768 161.19627 174.41685 160.25708 c
174.87115 159.80278 175.10571 159.21194 175.1205 158.61667 c
175.12125 158.61667 l
175.12125 158.55896 l
175.12125 158.55734 175.12125 158.55574 175.12125 158.55412 c
175.12125 115.32787 l
175.14697 115.32787 l
175.14697 76.84893 l
175.14697 69.634125 174.36859 62.419327 181.37407 62.419327 c
188.37956 62.419327 187.60117 69.634125 187.60117 76.84893 c
187.60117 115.32787 l
187.62784 115.32787 l
187.61192 115.84009 187.79944 116.35745 188.19041 116.74842 c
188.94176 117.49977 190.15993 117.49977 190.91129 116.74842 c
191.30225 116.35745 191.48978 115.84009 191.47386 115.32787 c
191.50052 115.32787 l
191.50052 76.84893 l
191.50052 69.634125 190.72214 62.419327 197.72762 62.419327 c
204.73311 62.419327 203.95471 69.634125 203.95471 76.84893 c
203.95471 115.32787 l
203.98045 115.32787 l
203.98045 158.61667 l
h
203.9812 158.61667 m
f
2 J
2 j
[
12
12
] 0 d
0.60000002 i
0.39920801 0.415795 0.42006099 sc
0.5 0 0 -0.5 -50.5 409 cm
480.73959 304.15118 m
479.86996 373.85367 l
480.56177 384.00565 l
480.32214 399.01392 l
S
0 i
CM
189.75171 262.52316 m
187.77026 256.88013 l
191.96933 256.96869 l
h
189.75171 262.52316 m
f
0 J
0 j
[] 0 d
0.5 0 0 -0.5 -50.5 409 cm
480.50342 292.95367 m
476.54053 304.23975 l
484.93866 304.06259 l
h
480.50342 292.95367 m
S
2 J
2 j
[
12
12
] 0 d
0.60000002 i
479.79907 696.79279 m
480.32214 760.84753 l
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
380.41873 203.45096 m
374.78363 209.08611 365.64731 209.08611 360.01221 203.45096 c
354.37708 197.81586 354.37708 188.67955 360.01221 183.04445 c
365.64731 177.40932 374.78363 177.40932 380.41873 183.04445 c
386.05386 188.67955 386.05386 197.81586 380.41873 203.45096 c
384.64581 158.61667 m
384.63004 159.25203 384.86456 159.89244 385.34946 160.37733 c
386.28864 161.31653 387.81137 161.31653 388.75055 160.37733 c
389.23544 159.89244 389.46997 159.25203 389.45419 158.61667 c
389.47473 158.61667 l
389.47473 130.95993 l
389.47473 125.54883 388.87598 120.13773 394.2648 120.13773 c
399.65363 120.13773 399.05487 125.54883 399.05487 130.95993 c
399.05487 163.42653 l
399.07468 163.42653 l
399.07468 171.39578 391.32224 177.85614 381.75916 177.85614 c
370.21545 177.85614 l
358.67178 177.85614 l
349.10867 177.85614 341.35626 171.39578 341.35626 163.42653 c
341.37607 163.42653 l
341.37607 130.95993 l
341.37607 125.54883 340.77731 120.13773 346.16614 120.13773 c
351.55496 120.13773 350.95621 125.54883 350.95621 130.95993 c
350.95621 158.61667 l
350.97675 158.61667 l
350.99155 159.21194 351.22607 159.80278 351.68039 160.25708 c
352.61957 161.19627 354.1423 161.19627 355.08148 160.25708 c
355.53577 159.80278 355.77032 159.21194 355.78513 158.61667 c
355.78586 158.61667 l
355.78586 158.55896 l
355.78586 158.55734 355.78586 158.55574 355.78586 158.55414 c
355.78586 115.32787 l
355.81158 115.32787 l
355.81158 76.84893 l
355.81158 69.634132 355.0332 62.419327 362.0387 62.419327 c
369.04419 62.419327 368.26578 69.634132 368.26578 76.84893 c
368.26578 115.32787 l
368.29245 115.32787 l
368.27655 115.84009 368.46405 116.35745 368.85504 116.74842 c
369.60638 117.49977 370.82455 117.49977 371.5759 116.74842 c
371.96686 116.35745 372.15439 115.84009 372.13849 115.32787 c
372.16513 115.32787 l
372.16513 76.84893 l
372.16513 69.634132 371.38675 62.419327 378.39224 62.419327 c
385.39774 62.419327 384.61932 69.634132 384.61932 76.84893 c
384.61932 115.32787 l
384.64508 115.32787 l
384.64508 158.61667 l
h
384.64581 158.61667 m
f
/Cs3 SC
0 sc
0.5 0 0 -0.5 11.650901 370.336 cm
/F1.1[ 64 0 0 -64 0 0]sf
-17.184 22.604004 m
(!)s
0.5 0 0 -0.5 361.48056 370.336 cm
-18.301802 22.604004 m
(")s
2 w
1 J
1 j
[] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
777.05487 363.41815 m
777.05487 333.23874 726.70459 308.83292 664.47992 308.83292 c
602.25525 308.83292 551.90497 333.23874 551.90497 363.41815 c
551.90497 389.13669 588.84308 410.78671 638.4256 416.42865 c
634.35712 426.1391 627.65216 437.55463 617.09717 443.19656 c
637.43494 443.19656 657.55432 429.81259 671.29523 417.8717 c
730.33179 416.16663 777.05487 392.4165 777.05487 363.41815 c
h
777.05487 363.41815 m
S
Q
/Cs3 SC
0 sc
q
338.02744 227.29092 m
338.02744 242.38063 312.85229 254.58354 281.73996 254.58354 c
250.62762 254.58354 225.4525 242.38063 225.4525 227.29092 c
225.4525 214.43166 243.92154 203.60664 268.7128 200.78568 c
266.67856 195.93045 263.32608 190.22269 258.04858 187.40172 c
268.21747 187.40172 278.27716 194.0937 285.14761 200.06415 c
314.66589 200.91669 338.02744 212.79175 338.02744 227.29092 c
h
338.02744 227.29092 m
W
0 0 493.5 390 rc
0.5 0 0 -0.5 281.73996 220.99263 cm
/F1.1[ 18 0 0 -18 0 0]sf
-67.356003 -30.027273 m
(#$%&'\(\)*+,%--\)+*)[ 7.668000 9.666000 10.332000 10.008000 5.004000 9.000000 9.666000 5.004000 10.674000 5.670000 10.332000 10.674000 10.674000 9.666000 10.674000 0.000000 ] xS
-75.528 -8.5232754 m
(.%/\)012345*6\)123+*)[ 9.000000 10.332000 15.354000 9.666000 5.670000 10.008000 3.996000 10.008000 10.332000 5.004000 5.004000 12.330000 9.666000 10.008000 3.996000 10.008000 10.674000 0.000000 ] xS
-72.18 12.980722 m
(7%&8*0%*7%&,*,24109)[ 9.000000 10.332000 10.008000 5.004000 5.004000 5.670000 10.332000 5.004000 9.000000 10.332000 10.008000 5.994000 5.004000 5.994000 3.996000 10.332000 10.008000 5.670000 0.000000 ] xS
Q
q
0 0 493.5 390 rc
0.5 0 0 -0.5 107.73301 22.170761 cm
/F1.1[ 36 0 0 -36 0 0]sf
-55.332001 -9.0079956 m
(:-!02!;*)[ 23.328000 21.348000 19.332000 11.340000 7.992000 19.332000 7.992000 0.000000 ] xS
-147.69 34 m
(-\),.-\)<02\(\)*0!=234)[ 21.348000 19.332000 11.988000 18.000000 21.348000 19.332000 19.332000 11.340000 7.992000 18.000000 19.332000 10.008000 11.340000 19.332000 18.684000 7.992000 20.016000 0.000000 ] xS
0.5 0 0 -0.5 399.15683 22.170761 cm
-114.354 -9.0079956 m
(>/!423\)+*.\);?@)[ 9.324000 30.708000 19.332000 20.664000 7.992000 20.016000 19.332000 21.348000 10.008000 18.000000 19.332000 7.992000 10.656000 0.000000 ] xS
-55.692001 34 m
(/%02%3)[ 30.708000 20.664000 11.340000 7.992000 20.664000 0.000000 ] xS
/Cs2 SC
0.98837209 1 1 sc
CM
79.5 203 m
101.5 203 l
101.5 181 l
79.5 181 l
h
79.5 203 m
f
13 0 0 10 84 187 cm
BI
/Width 39
/Height 30
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
FSu1=r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8R3=s8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osFSu1=r;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8R3=s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osFSu1=r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8R3=s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osFSu1=r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8R3=s8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osFSu1=r;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8R3=s8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osFSu1=r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8R3=s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osFSu1=r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8R3=
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osFSu1=r;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8R3=s8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osFSu1=r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8R3=s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osFSu1=r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8R3=s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osFSu1=r;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8R3=s8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osFSu1=r;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8R3=s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osFSu1=r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8R3=s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osFSu1=
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8R3=s8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osFSu1=r;Zfps8W#ss8;osr;Zfps8W#s
s8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8R3=s8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;os
r;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfps8W#ss8;osr;Zfp
s8W#ss8;osr;Zfps8W#ss8;osJ,
~> %APLeod
EI
1 J
1 j
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
276.44531 426.83206 m
276.11908 427.28183 275.68893 427.45593 275.19724 427.5 c
275.90836 427.45642 m
270.01562 427.8176 l
270.18097 427.5314 269.53925 428.21353 269.5 429 c
269.48361 428.52768 m
269.97519 442.68732 l
269.46555 442.85809 270.12418 443.45316 271 443.5 c
270.15909 443.49545 m
293.54013 443.62177 l
293.77481 443.50525 294.48581 442.85861 294.5 442 c
294.4921 442.56735 m
294.68723 428.57797 l
294.54495 428.26587 293.89908 427.56192 293 427.5 c
293.65042 427.52762 m
288.27261 427.29929 l
288.30017 427.54114 287.78766 427.27747 287.55469 426.83206 c
287.73447 427.27072 m
286.45892 424.15802 l
286.10468 424.76114 285.65594 424.50613 285.19724 424.5 c
285.14941 423.60623 m
285.24347 425.36459 l
286.16049 424.70673 m
277.67618 424.49847 l
278.31329 424.49329 277.814 424.7803 277.55469 425.16794 c
277.96146 424.39841 m
276.35751 427.43292 l
276.75674 427.49213 m
276.2265 426.36832 l
286.24265 430.75735 m
288.71289 433.33136 288.6377 437.14313 286.24265 439.24265 c
283.96185 441.61401 279.8721 441.65826 277.75735 439.24265 c
275.58536 436.9606 275.27008 432.7869 277.75735 430.75735 c
280.11569 428.12091 283.98746 428.28812 286.24265 430.75735 c
284.18198 432.81802 m
282.4007 431.14352 281.35028 431.22318 279.81802 432.81802 c
277.82394 434.62286 277.97647 435.50128 279.81802 437.18198 c
281.46918 438.89633 282.18387 439.01059 284.18198 437.18198 c
285.93484 435.58688 285.96158 434.64246 284.18198 432.81802 c
289.78033 429.21967 m
290.10388 429.54788 290.09152 430.02682 289.78033 430.28033 c
289.49622 430.55188 289.01346 430.61362 288.71967 430.28033 c
288.41171 430.00073 288.42389 429.53183 288.71967 429.21967 c
289.04874 428.89566 289.49185 428.909 289.78033 429.21967 c
274.37103 426.82178 m
275.10266 424.99619 l
274.53033 425.68042 274.33835 425.51346 274.17499 425.5 c
275.01221 425.33258 m
271.47122 426.04071 l
272.14453 425.51718 272.01151 425.63589 272 425.82501 c
272.16672 424.85376 m
271.74075 427.33521 l
271.29739 427.01782 m
274.94406 426.42819 l
276.44531 426.83206 m
276.36908 427.03183 275.93893 427.20593 275.44724 427.25 c
276.03394 427.34103 m
270.72855 427.70572 l
270.43097 427.2814 269.78925 427.96353 269.75 428.75 c
269.69302 428.39975 m
270.12259 442.24692 l
269.71555 442.60809 270.37418 443.20316 271.25 443.25 c
270.28476 443.24564 m
292.70352 443.47525 l
294.02481 443.25525 294.73581 442.60861 294.75 441.75 c
294.5242 442.44104 m
294.72003 429.24631 l
294.79495 428.01587 294.14908 427.31192 293.25 427.25 c
293.77518 427.40875 m
289.04291 427.28671 l
288.55017 427.29114 288.03766 427.02747 287.80469 426.58206 c
287.78635 427.17566 m
286.8327 424.94916 l
286.35468 424.51114 285.90594 424.25613 285.44724 424.25 c
285.39456 423.47482 m
285.38815 424.55533 l
286.28363 424.6572 m
278.7543 424.47824 l
278.56329 424.24329 278.064 424.5303 277.80469 424.91794 c
278.12897 424.29587 m
276.76282 426.98123 l
276.84811 427.383 m
276.50806 426.73642 l
286.24265 430.75735 m
288.96289 433.08136 288.8877 436.89313 286.49265 438.99265 c
284.21185 441.36401 280.1221 441.40826 278.00735 438.99265 c
275.83536 436.7106 275.52008 432.5369 278.00735 430.50735 c
280.36569 427.87091 284.23746 428.03812 286.49265 430.50735 c
284.18198 432.81802 m
282.6507 430.89352 281.60028 430.97318 280.06802 432.56802 c
278.07394 434.37286 278.22647 435.25128 280.06802 436.93198 c
281.71918 438.64633 282.43387 438.76059 284.43198 436.93198 c
286.18484 435.33688 286.21158 434.39246 284.43198 432.56802 c
289.78033 429.21967 m
290.35388 429.29788 290.34152 429.77682 290.03033 430.03033 c
289.74622 430.30188 289.26346 430.36362 288.96967 430.03033 c
288.66171 429.75073 288.67389 429.28183 288.96967 428.96967 c
289.29874 428.64566 289.74185 428.659 290.03033 428.96967 c
274.39474 426.65619 m
274.96991 425.33014 l
274.78033 425.43042 274.58835 425.26346 274.42499 425.25 c
275.15118 425.27744 m
272.52011 425.75128 l
272.39453 425.26718 272.26151 425.38589 272.25 425.57501 c
272.32108 424.7338 m
272.02332 426.82529 l
271.41675 426.85788 m
274.60757 426.26718 l
S
0 i
/Cs1 SC
1 1 1 sc
CM
212.24733 233.81284 m
213.31096 232.74922 213.31096 231.02473 212.24733 229.96112 c
211.1837 228.89748 209.45921 228.89748 208.3956 229.96112 c
207.33195 231.02473 207.33195 232.74922 208.3956 233.81284 c
209.45921 234.87648 211.1837 234.87648 212.24733 233.81284 c
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
525.49463 350.37433 m
527.62189 352.50156 527.62189 355.95053 525.49463 358.07776 c
523.36737 360.20505 519.91846 360.20505 517.7912 358.07776 c
515.66394 355.95053 515.66394 352.50156 517.7912 350.37433 c
519.91846 348.24704 523.36737 348.24704 525.49463 350.37433 c
S
0 i
1 1 1 sc
CM
394.42606 308.21844 m
376.28061 314.19983 383.51654 364.55328 412.46259 355.96152 c
415.14816 372.70959 448.8085 369.99121 448.58847 355.96152 c
469.69452 373.90567 496.66684 338.12537 478.57529 320.18121 c
500.28424 311.48141 478.30133 264.60812 460.48483 272.43817 c
459.05899 259.38736 427.20844 254.82031 424.41287 272.43817 c
406.37744 253.62314 368.77069 282.55228 394.42606 308.21844 c
h
394.42606 308.21844 m
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
889.85211 201.5631 m
853.56122 189.60033 868.03308 88.893448 925.92517 106.07699 c
931.29633 72.580788 998.617 78.017601 998.17694 106.07699 c
1040.389 70.188675 1094.3336 141.74925 1058.1505 177.63756 c
1101.5685 195.03714 1057.6027 288.78375 1021.9697 273.12366 c
1019.118 299.22528 955.41687 308.35938 949.82574 273.12366 c
913.75488 310.75372 838.54138 252.89543 889.85211 201.5631 c
h
889.85211 201.5631 m
S
0 i
1 1 1 sc
CM
392.91196 245.00981 m
393.97559 243.94618 393.97559 242.22171 392.91196 241.15808 c
391.84833 240.09445 390.12384 240.09445 389.06021 241.15808 c
387.99658 242.22171 387.99658 243.94618 389.06021 245.00981 c
390.12384 246.07344 391.84833 246.07344 392.91196 245.00981 c
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
886.82391 327.98038 m
888.95117 330.10764 888.95117 333.55658 886.82391 335.68384 c
884.69666 337.8111 881.24768 337.8111 879.12042 335.68384 c
876.99316 333.55658 876.99316 330.10764 879.12042 327.98038 c
881.24768 325.85312 884.69666 325.85312 886.82391 327.98038 c
S
0 i
1 1 1 sc
CM
401.99057 251.97009 m
403.0542 250.90646 403.0542 249.18199 401.99057 248.11836 c
400.92694 247.05473 399.20245 247.05473 398.13882 248.11836 c
397.0752 249.18199 397.0752 250.90646 398.13882 251.97009 c
399.20245 253.03372 400.92694 253.03372 401.99057 251.97009 c
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
904.98114 314.05981 m
907.1084 316.18707 907.1084 319.63602 904.98114 321.76328 c
902.85388 323.89053 899.40491 323.89053 897.27765 321.76328 c
895.15039 319.63602 895.15039 316.18707 897.27765 314.05981 c
899.40491 311.93256 902.85388 311.93256 904.98114 314.05981 c
S
0 i
1 1 1 sc
CM
409.55609 260.44348 m
410.61972 259.37985 410.61972 257.65536 409.55609 256.59174 c
408.49246 255.52811 406.76797 255.52811 405.70435 256.59174 c
404.64072 257.65536 404.64072 259.37985 405.70435 260.44348 c
406.76797 261.50711 408.49246 261.50711 409.55609 260.44348 c
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
920.11218 297.11307 m
922.23944 299.2403 922.23944 302.68927 920.11218 304.8165 c
917.98492 306.94379 914.53595 306.94379 912.40869 304.8165 c
910.28143 302.68927 910.28143 299.2403 912.40869 297.11307 c
914.53595 294.98578 917.98492 294.98578 920.11218 297.11307 c
S
0 i
/Cs2 SC
0.60000002 0.60000002 0.60000002 sc
CM
437.24478 334.1355 m
435.37369 336.00662 432.34003 336.00662 430.46893 334.1355 c
428.59784 332.2644 428.59784 329.23077 430.46893 327.35968 c
432.34003 325.48856 435.37369 325.48856 437.24478 327.35968 c
439.11588 329.23077 439.11588 332.2644 437.24478 334.1355 c
438.64835 319.2486 m
438.6431 319.45956 438.72098 319.67221 438.88199 319.83322 c
439.19385 320.14508 439.69943 320.14508 440.01129 319.83322 c
440.1723 319.67221 440.25018 319.45956 440.24493 319.2486 c
440.25177 319.2486 l
440.25177 310.0654 l
440.25177 308.26868 440.05295 306.47195 441.84225 306.47195 c
443.63159 306.47195 443.43277 308.26868 443.43277 310.0654 c
443.43277 320.84567 l
443.43933 320.84567 l
443.43933 323.49182 440.8652 325.63693 437.68985 325.63693 c
433.85684 325.63693 l
430.02386 325.63693 l
426.84851 325.63693 424.27435 323.49182 424.27435 320.84567 c
424.28094 320.84567 l
424.28094 310.0654 l
424.28094 308.26868 424.08212 306.47195 425.87146 306.47195 c
427.66077 306.47195 427.46194 308.26868 427.46194 310.0654 c
427.46194 319.2486 l
427.46878 319.2486 l
427.47369 319.44626 427.55157 319.64246 427.70242 319.7933 c
428.01425 320.10513 428.51987 320.10513 428.83173 319.7933 c
428.98257 319.64246 429.06046 319.44626 429.06537 319.2486 c
429.06561 319.2486 l
429.06561 319.22943 l
429.06561 319.22891 429.06561 319.22836 429.06561 319.22784 c
429.06561 304.87488 l
429.07416 304.87488 l
429.07416 292.09821 l
429.07416 289.70261 428.8157 287.30698 431.14182 287.30698 c
433.46793 287.30698 433.20947 289.70261 433.20947 292.09821 c
433.20947 304.87488 l
433.21832 304.87488 l
433.21304 305.04495 433.27533 305.21674 433.40512 305.34656 c
433.6546 305.59604 434.05911 305.59604 434.30856 305.34656 c
434.43839 305.21674 434.50067 305.04495 434.49539 304.87488 c
434.50424 304.87488 l
434.50424 292.09821 l
434.50424 289.70261 434.24579 287.30698 436.5719 287.30698 c
438.89801 287.30698 438.63956 289.70261 438.63956 292.09821 c
438.63956 304.87488 l
438.6481 304.87488 l
438.6481 319.2486 l
h
438.64835 319.2486 m
f
3 w
2 J
2 j
[
12
12
] 0 d
0.60000002 i
0.39920801 0.415795 0.42006099 sc
0.5 0 0 -0.5 -50.5 409 cm
968.61322 124.44761 m
968.63678 137.36223 l
968.78693 145.71652 l
S
968.61322 244.59186 m
968.78693 265.86078 l
S
2 w
1 J
1 j
[
4
4
] 0 d
/Cs1 SC
0 0 0 sc
977.45312 120.46462 m
982.27979 122.70136 982.27979 126.32783 977.45312 128.56458 c
972.62646 130.80132 964.80096 130.80132 959.9743 128.56458 c
955.14764 126.32783 955.14764 122.70136 959.9743 120.46462 c
964.80096 118.22787 972.62646 118.22787 977.45312 120.46462 c
S
[] 0 d
977.19495 118.78706 m
973.94446 119.25464 l
975.45245 121.72604 l
S
0 i
1 1 1 sc
CM
386.55692 235.32594 m
387.62054 234.26231 387.62054 232.53784 386.55692 231.47421 c
385.49329 230.41058 383.7688 230.41058 382.70517 231.47421 c
381.64154 232.53784 381.64154 234.26231 382.70517 235.32594 c
383.7688 236.38957 385.49329 236.38957 386.55692 235.32594 c
f
1 w
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
874.11383 347.34811 m
876.24109 349.47537 876.24109 352.92432 874.11383 355.05157 c
871.98657 357.17883 868.5376 357.17883 866.41034 355.05157 c
864.28308 352.92432 864.28308 349.47537 866.41034 347.34811 c
868.5376 345.22086 871.98657 345.22086 874.11383 347.34811 c
S
0 i
1 1 1 sc
CM
381.41235 222.01064 m
382.47598 220.94701 382.47598 219.22253 381.41235 218.15891 c
380.34872 217.09528 378.62424 217.09528 377.56061 218.15891 c
376.49698 219.22253 376.49698 220.94701 377.56061 222.01064 c
378.62424 223.07426 380.34872 223.07426 381.41235 222.01064 c
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
863.82471 373.97873 m
865.95197 376.10599 865.95197 379.55493 863.82471 381.68219 c
861.69745 383.80945 858.24847 383.80945 856.12122 381.68219 c
853.99396 379.55493 853.99396 376.10599 856.12122 373.97873 c
858.24847 371.85147 861.69745 371.85147 863.82471 373.97873 c
S
0 i
1 1 1 sc
CM
220.11647 306.70535 m
201.97101 312.68674 209.20697 363.04016 238.15302 354.44839 c
240.83856 371.1965 274.49893 368.47809 274.27887 354.44839 c
295.38495 372.39255 322.35724 336.61227 304.26569 318.66812 c
325.97467 309.96832 303.99176 263.09503 286.17526 270.92505 c
284.74939 257.87427 252.89886 253.30721 250.10329 270.92505 c
232.06786 252.11003 194.46112 281.03918 220.11647 306.70535 c
h
220.11647 306.70535 m
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
541.23291 204.58931 m
504.94202 192.62654 519.41394 91.919655 577.30603 109.1032 c
582.67712 75.606995 649.99786 81.043808 649.55774 109.1032 c
691.7699 73.214882 745.71448 144.77545 709.53137 180.66377 c
752.94934 198.06335 708.98352 291.80994 673.35052 276.14987 c
670.49878 302.25146 606.79773 311.38559 601.20654 276.14987 c
565.13568 313.77994 489.92224 255.92163 541.23291 204.58931 c
h
541.23291 204.58931 m
S
0 i
1 1 1 sc
CM
218.60236 243.4967 m
219.66599 242.43307 219.66599 240.7086 218.60236 239.64497 c
217.53873 238.58134 215.81425 238.58134 214.75063 239.64497 c
213.687 240.7086 213.687 242.43307 214.75063 243.4967 c
215.81425 244.56033 217.53873 244.56033 218.60236 243.4967 c
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
538.20471 331.00659 m
540.33197 333.13385 540.33197 336.58279 538.20471 338.71005 c
536.07745 340.83731 532.62854 340.83731 530.50128 338.71005 c
528.37402 336.58279 528.37402 333.13385 530.50128 331.00659 c
532.62854 328.87933 536.07745 328.87933 538.20471 331.00659 c
S
0 i
1 1 1 sc
CM
227.68098 250.45699 m
228.74461 249.39336 228.74461 247.66888 227.68098 246.60526 c
226.61736 245.54163 224.89288 245.54163 223.82925 246.60526 c
222.76562 247.66888 222.76562 249.39336 223.82925 250.45699 c
224.89288 251.52061 226.61736 251.52061 227.68098 250.45699 c
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
556.36194 317.08603 m
558.48926 319.21329 558.48926 322.66223 556.36194 324.78949 c
554.23474 326.91675 550.78577 326.91675 548.65851 324.78949 c
546.53125 322.66223 546.53125 319.21329 548.65851 317.08603 c
550.78577 314.95877 554.23474 314.95877 556.36194 317.08603 c
S
0 i
1 1 1 sc
CM
235.24651 258.93036 m
236.31013 257.86673 236.31013 256.14227 235.24651 255.07864 c
234.18288 254.01501 232.4584 254.01501 231.39478 255.07864 c
230.33115 256.14227 230.33115 257.86673 231.39478 258.93036 c
232.4584 259.99399 234.18288 259.99399 235.24651 258.93036 c
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
571.49298 300.13925 m
573.6203 302.26651 573.6203 305.71545 571.49298 307.84271 c
569.36578 309.96997 565.91681 309.96997 563.78955 307.84271 c
561.66229 305.71545 561.66229 302.26651 563.78955 300.13925 c
565.91681 298.01199 569.36578 298.01199 571.49298 300.13925 c
S
0 i
/Cs2 SC
0.60000002 0.60000002 0.60000002 sc
CM
262.93518 332.62241 m
261.06409 334.4935 258.03046 334.4935 256.15936 332.62241 c
254.28825 330.75131 254.28825 327.71768 256.15936 325.84656 c
258.03046 323.97546 261.06409 323.97546 262.93518 325.84656 c
264.8063 327.71768 264.8063 330.75131 262.93518 332.62241 c
264.33878 317.7355 m
264.33353 317.94647 264.41141 318.15912 264.57242 318.32013 c
264.88425 318.63196 265.38986 318.63196 265.70172 318.32013 c
265.8627 318.15912 265.94058 317.94647 265.93536 317.7355 c
265.94217 317.7355 l
265.94217 308.55228 l
265.94217 306.75555 265.74335 304.95886 267.53268 304.95886 c
269.32199 304.95886 269.1232 306.75555 269.1232 308.55228 c
269.1232 319.33258 l
269.12976 319.33258 l
269.12976 321.97873 266.55563 324.12384 263.38028 324.12384 c
259.54727 324.12384 l
255.71428 324.12384 l
252.53893 324.12384 249.96478 321.97873 249.96478 319.33258 c
249.97136 319.33258 l
249.97136 308.55228 l
249.97136 306.75555 249.77254 304.95886 251.56186 304.95886 c
253.35118 304.95886 253.15237 306.75555 253.15237 308.55228 c
253.15237 317.7355 l
253.15919 317.7355 l
253.16411 317.93317 253.24199 318.12933 253.39284 318.28018 c
253.70468 318.59204 254.2103 318.59204 254.52214 318.28018 c
254.67299 318.12933 254.75087 317.93317 254.75578 317.7355 c
254.75603 317.7355 l
254.75603 317.71634 l
254.75603 317.71579 254.75603 317.71527 254.75603 317.71472 c
254.75603 303.36176 l
254.76457 303.36176 l
254.76457 290.58511 l
254.76457 288.18948 254.50612 285.79385 256.83224 285.79385 c
259.15836 285.79385 258.8999 288.18948 258.8999 290.58511 c
258.8999 303.36176 l
258.90875 303.36176 l
258.90347 303.53186 258.96573 303.70364 259.09555 303.83347 c
259.34503 304.08295 259.74951 304.08295 259.99899 303.83347 c
260.12881 303.70364 260.19107 303.53186 260.18579 303.36176 c
260.19464 303.36176 l
260.19464 290.58511 l
260.19464 288.18948 259.93619 285.79385 262.2623 285.79385 c
264.58844 285.79385 264.32999 288.18948 264.32999 290.58511 c
264.32999 303.36176 l
264.33853 303.36176 l
264.33853 317.7355 l
h
264.33878 317.7355 m
f
3 w
2 J
2 j
[
12
12
] 0 d
0.60000002 i
0.39920801 0.415795 0.42006099 sc
0.5 0 0 -0.5 -50.5 409 cm
619.99408 127.47382 m
620.01758 140.38844 l
620.16772 148.74274 l
S
619.99408 247.61806 m
620.16772 268.88696 l
S
2 w
1 J
1 j
[
4
4
] 0 d
/Cs1 SC
0 0 0 sc
628.83398 123.49083 m
633.66064 125.72757 633.66064 129.35403 628.83398 131.59077 c
624.00732 133.82753 616.18176 133.82753 611.3551 131.59077 c
606.52844 129.35403 606.52844 125.72757 611.3551 123.49083 c
616.18176 121.25407 624.00732 121.25407 628.83398 123.49083 c
S
[] 0 d
628.57574 121.81327 m
625.32526 122.28085 l
626.83331 124.75225 l
S
0 i
1 1 1 sc
CM
207.10277 220.49753 m
208.1664 219.4339 208.1664 217.70943 207.10277 216.6458 c
206.03914 215.58217 204.31467 215.58217 203.25104 216.6458 c
202.18741 217.70943 202.18741 219.4339 203.25104 220.49753 c
204.31467 221.56116 206.03914 221.56116 207.10277 220.49753 c
f
1 w
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
515.20557 377.00494 m
517.33282 379.1322 517.33282 382.58115 515.20557 384.7084 c
513.07831 386.83566 509.62933 386.83566 507.50208 384.7084 c
505.37482 382.58115 505.37482 379.1322 507.50208 377.00494 c
509.62933 374.87769 513.07831 374.87769 515.20557 377.00494 c
S
2 w
0 J
0 j
[
8
6
8
6
2
6
] 0 d
603.77643 172 m
576.99902 138.12056 l
S
0 i
CM
235.02313 343.70551 m
236.58734 338.82358 l
239.41168 341.05585 l
h
235.02313 343.70551 m
f
[] 0 d
0.5 0 0 -0.5 -50.5 409 cm
571.04626 130.58897 m
574.17468 140.35284 l
579.82336 135.88828 l
h
571.04626 130.58897 m
S
/Cs3 SC
0 sc
0.5 0 0 -0.5 226.75 61.36039 cm
/F1.1[ 18 0 0 -18 0 0]sf
-33.335999 6.2480011 m
(:-\)!=\),)[ 11.664000 10.674000 9.666000 9.666000 9.342000 9.666000 0.000000 ] xS
0.5 0 0 -0.5 70.75 312.13962 cm
-37.502998 6.2480011 m
(A+,\)..\)\))[ 11.664000 10.674000 5.670000 9.666000 9.000000 9.000000 9.666000 0.000000 ] xS
/Cs2 SC
0.60000002 0.60000002 0.60000002 sc
CM
119.55959 310.57874 m
113.92448 316.21387 104.78819 316.21387 99.153076 310.57874 c
93.517944 304.94363 93.517944 295.80731 99.153076 290.17221 c
104.78819 284.53708 113.92448 284.53708 119.55959 290.17221 c
125.19473 295.80731 125.19473 304.94363 119.55959 310.57874 c
123.78668 265.74442 m
123.77089 266.37979 124.00544 267.0202 124.49033 267.5051 c
125.42951 268.44427 126.95222 268.44427 127.89141 267.5051 c
128.3763 267.0202 128.61084 266.37979 128.59506 265.74442 c
128.6156 265.74442 l
128.6156 238.08769 l
128.6156 232.67659 128.01683 227.26549 133.40567 227.26549 c
138.79449 227.26549 138.19574 232.67659 138.19574 238.08769 c
138.19574 270.55429 l
138.21553 270.55429 l
138.21553 278.52353 130.46312 284.98389 120.90002 284.98389 c
109.35634 284.98389 l
97.812653 284.98389 l
88.249557 284.98389 80.497131 278.52353 80.497131 270.55429 c
80.51693 270.55429 l
80.51693 238.08769 l
80.51693 232.67659 79.918167 227.26549 85.306999 227.26549 c
90.695831 227.26549 90.097076 232.67659 90.097076 238.08769 c
90.097076 265.74442 l
90.117615 265.74442 l
90.132408 266.33972 90.366959 266.93054 90.821259 267.38486 c
91.760445 268.32404 93.283157 268.32404 94.222343 267.38486 c
94.676643 266.93054 94.911194 266.33972 94.925987 265.74442 c
94.926735 265.74442 l
94.926735 265.68671 l
94.926735 265.68512 94.926735 265.6835 94.926735 265.68188 c
94.926735 222.45563 l
94.952469 222.45563 l
94.952469 183.97668 l
94.952469 176.76189 94.17408 169.54709 101.17956 169.54709 c
108.18504 169.54709 107.40665 176.76189 107.40665 183.97668 c
107.40665 222.45563 l
107.43332 222.45563 l
107.4174 222.96785 107.60493 223.48521 107.9959 223.87619 c
108.74725 224.62753 109.96542 224.62753 110.71677 223.87619 c
111.10773 223.48521 111.29527 222.96785 111.27935 222.45563 c
111.30602 222.45563 l
111.30602 183.97668 l
111.30602 176.76189 110.52763 169.54709 117.53311 169.54709 c
124.53859 169.54709 123.7602 176.76189 123.7602 183.97668 c
123.7602 222.45563 l
123.78593 222.45563 l
123.78593 265.74442 l
h
123.78668 265.74442 m
f
0 0 0 sc
113.71959 304.98065 m
114.31049 304.38974 114.31049 303.4317 113.71959 302.84079 c
113.12868 302.24991 112.17065 302.24991 111.57974 302.84079 c
110.98883 303.4317 110.98883 304.38974 111.57974 304.98065 c
112.17065 305.57156 113.12868 305.57156 113.71959 304.98065 c
f
107.13293 304.98065 m
107.72384 304.38974 107.72384 303.4317 107.13293 302.84079 c
106.54202 302.24991 105.58398 302.24991 104.99308 302.84079 c
104.40218 303.4317 104.40218 304.38974 104.99308 304.98065 c
105.58398 305.57156 106.54202 305.57156 107.13293 304.98065 c
f
0.85490197 0.85490197 0.85490197 sc
112.755 296.65857 m
114.63203 296.06769 114.63203 295.10965 112.755 294.51874 c
110.87797 293.92783 107.8347 293.92783 105.95768 294.51874 c
104.08064 295.10965 104.08064 296.06769 105.95768 296.65857 c
107.8347 297.24948 110.87797 297.24948 112.755 296.65857 c
f
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -50.5 409 cm
326.50998 224.68283 m
330.26407 225.86464 330.26407 227.78073 326.50998 228.96254 c
322.75592 230.14435 316.6694 230.14435 312.91534 228.96254 c
309.16129 227.78073 309.16129 225.86464 312.91534 224.68283 c
316.6694 223.50102 322.75592 223.50102 326.50998 224.68283 c
S
3 w
2 J
2 j
[
12
12
] 0 d
/Cs2 SC
0.39920801 0.415795 0.42006099 sc
319.53989 135.99789 m
319.93311 184.15315 l
S
0 i
CM
109.22421 346.60086 m
107.17001 340.98392 l
111.36987 341.01819 l
h
109.22421 346.60086 m
f
0 J
0 j
[] 0 d
0.5 0 0 -0.5 -50.5 409 cm
319.44843 124.79826 m
315.34003 136.03218 l
323.73975 135.96359 l
h
319.44843 124.79826 m
S
2 J
2 j
[
12
12
] 0 d
0.60000002 i
319.41003 474.66913 m
318.38303 505.88345 l
319.93311 538.72388 l
S
ep
end
%%Trailer
%%EOF
